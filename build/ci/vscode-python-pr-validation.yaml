# PR Validation build.

name: '$(Year:yyyy).$(Month).0.$(BuildID)-pr'

# Notes: Only trigger a PR build for main and release, and skip build/rebuild
#        on changes in the news and .vscode folders.
pr:
  autoCancel: true
  branches:
    include:
      - 'main'
      - 'release*'
      - 'ds*'
      - 'logging-changes-and-drop-old-debugger'
  paths:
    exclude: ['/news/1 Enhancements', '/news/2 Fixes', '/news/3 Code Health', '/.vscode']

# Not the CI build for merges to main and release.
trigger: none

# Variables that are available for the entire pipeline.
variables:
  - template: templates/globals.yml

stages:
  - stage: Build
    jobs:
      - template: templates/jobs/build_compile.yml

  # Each item in each matrix has a number of possible values it may
  # define.  They are detailed in templates/test_phases.yml.  The only
  # required value is "TestsToRun".

  - stage: Linux
    dependsOn: []
    jobs:
      - job: 'Py3x'
        dependsOn: []
        strategy:
          matrix:
            'NodeUnit':
              TestsToRun: 'testUnitTests'
              NeedsPythonTestReqs: false
              NeedsIPythonReqs: false
            'Unit':
              TestsToRun: 'pythonIPythonTests'
              NeedsPythonTestReqs: true
              NeedsIPythonReqs: true
            'Functional':
              TestsToRun: 'testfunctional'
              NeedsPythonTestReqs: true
              NeedsPythonFunctionalReqs: true
              SplitFunctionalTests: false
            # 'DataScience':
            #   TestsToRun: 'testDataScience'
            #   NeedsPythonTestReqs: true
            #   NeedsPythonFunctionalReqs: true
            # 'Smoke':
            #   TestsToRun: 'testSmoke'
            #   NeedsPythonTestReqs: true
            #   NeedsIPythonReqs: true
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - template: templates/test_phases.yml

    #   - job: 'Py27'
    #     dependsOn: []
    #     strategy:
    #       matrix:
    #         'Functional':
    #           PythonVersion: '2.7'
    #           TestsToRun: 'testfunctional'
    #           NeedsPythonTestReqs: true
    #           NeedsPythonFunctionalReqs: true
    #     pool:
    #       vmImage: 'ubuntu-16.04'
    #     steps:
    #       - template: templates/test_phases.yml

#   - stage: Mac
#     dependsOn: []
#     jobs:
#       - job: 'Py3x'
#         dependsOn: []
#         strategy:
#           matrix:
#             # This gives us our best functional coverage for the OS.
#             'Functional+Single':
#               TestsToRun: 'testfunctional, testSingleWorkspace'
#               NeedsPythonTestReqs: true
#               NeedsPythonFunctionalReqs: true
#         pool:
#           vmImage: '$(vmImageMacOS)'
#         steps:
#           - template: templates/test_phases.yml

#   - stage: Windows
#     dependsOn: []
#     jobs:
#       - job: 'Py3x'
#         dependsOn: []
#         timeoutInMinutes: 90
#         strategy:
#           matrix:
#             # This gives us our best functional coverage for the OS.
#             'Functional':
#               TestsToRun: 'testfunctional'
#               NeedsPythonTestReqs: true
#               NeedsPythonFunctionalReqs: true
#             'Single Workspace':
#               TestsToRun: 'testSingleWorkspace'
#               NeedsPythonTestReqs: true
#         pool:
#           vmImage: 'vs2017-win2016'
#         steps:
#           - template: templates/test_phases.yml

#   - stage: Reports
#     dependsOn:
#       - Linux
#     #   - Mac
#     #   - Windows
#     condition: always()
#     jobs:
#       - template: templates/jobs/coverage.yml
