.slice-data {
    background-color: var(--vscode-input-background);
    color: var(--vscode-input-foreground);
    padding: 0px 4px;
    /* input does not inherit font from body */
    font-family: var(--vscode-font-family);
    font-weight: var(--vscode-font-weight);
    font-size: var(--vscode-font-size);
    height: 30px;
    margin: 0px;
    border: none;
}

[class*='ms-Dropdown is-disabled'],
.submit-slice-button:disabled,
.disabled,
.slice-data:disabled {
    opacity: 0.4;
}

.slicing-control {
    font-family: var(--vscode-font-family);
    font-weight: var(--vscode-font-weight);
    font-size: var(--vscode-font-size);
}

.slice-summary {
    display: flex;
    flex-direction: row;
}

.slice-summary-detail {
    padding-bottom: 2px;
}

.current-slice {
    margin-left: 10px;
    padding-left: 5px;
    padding-right: 5px;
    padding-top: 0px;
    background-color: var(--vscode-input-background);
}

.slice-form {
    align-self: center;
    flex-direction: column;
    justify-content: space-between;
    padding: 4px;
}

.slice-control-row {
    display: flex;
    flex-direction: row;
    margin-left: 30px;
}

.slice-control-column {
    flex-direction: column;
}

details > summary {
    list-style-type: none;
    display: flex;
}

details > summary::-webkit-details-marker {
    display: none;
}

details > summary::before {
    font: normal normal normal 16px/1 codicon;
    content: '\eab6';
}

details[open] > summary::before {
    font: normal normal normal 16px/1 codicon;
    content: '\eab4';
}

.submit-slice-button {
    color: var(--vscode-button-foreground);
    background-color: var(--vscode-button-background);
    border: none;
    margin-left: 10px;
    padding: 4px 8px;
    height: 30px;
    font-family: var(--vscode-font-family);
    font-weight: var(--vscode-font-weight);
    font-size: var(--vscode-font-size);
    max-width: fit-content;
}

.slice-enablement-checkbox {
    margin-right: 6px;
    width: 20px;
}

.slice-enablement-checkbox-container {
    padding-top: 4px;
    padding-bottom: 4px;
}

:focus {
    outline: none;
}

/* Overrides for Fluent UI controls */
[class*='text'] {
    color: var(--vscode-editor-foreground);
    font-family: var(--vscode-font-family);
    font-weight: var(--vscode-font-weight);
    font-size: var(--vscode-font-size);
}

[class*='ms-Dropdown-label'] {
    color: var(--vscode-editor-foreground);
    font-family: var(--vscode-font-family);
    font-weight: var(--vscode-font-weight);
    font-size: var(--vscode-font-size);
}

.dropdownTitleOverrides .ms-Dropdown-title {
    /* Usually want to avoid !important but in this case
       it's necessary to ensure that when the dropdown
       has focus, the default dropdown :focus color (black)
       is not applied */
    color: var(--vscode-dropdown-foreground) !important; 
    font-family: var(--vscode-font-family);
    font-weight: var(--vscode-font-weight);
    font-size: var(--vscode-font-size);
    background-color: var(--vscode-dropdown-background);
    border: var(--vscode-dropdown-border);
}

.slice-data.input-invalid {
    outline: 1px solid var(--vscode-inputValidation-errorBorder);
}

.slice-data.input-invalid:focus {
    outline: 2px solid var(--vscode-inputValidation-errorBorder);
}

.slice-data:focus {
    outline: 1px solid var(--vscode-button-background)
}

.error-message {
    outline: 1px solid var(--vscode-inputValidation-errorBorder);
    background-color: var(--vscode-inputValidation-errorBackground);
    color: var(--vscode-settings-textInputForeground);
    font-family: var(--vscode-font-family);
    font-weight: var(--vscode-font-weight);
    font-size: var(--vscode-font-size);
    padding: 5px 3px;
    align-items: center;
    max-width: fit-content;
}
