{
    "products.installingModule": "Installing {0}",
    "capabilities.untrustedWorkspace.description": "Execution of cells in Interactive Window and Notebooks is not supported in untrusted workspaces.",
    "contributes.walkthroughs.jupyterWelcome.title": "Get started with Jupyter Notebooks",
    "contributes.walkthroughs.jupyterWelcome.description": "Your first steps to set up a Jupyter project with all the powerful tools and features that the Jupyter Extension has to offer!",
    "contributes.walkthroughs.jupyterWelcome.steps.ipynb.newUntitledIpynb.title": "Create or open a Jupyter Notebook",
    "contributes.walkthroughs.jupyterWelcome.steps.ipynb.newUntitledIpynb.description": {
        "message": "Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Create: New Jupyter Notebook``.\n[Create New Jupyter Notebook](command:toSide:ipynb.newUntitledIpynb)\n If you have an existing project, you can also [open a folder](command:toSide:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:toSide:git.clone).",
        "comment": [
            "{Locked='command:workbench.action.showCommands'}",
            "{Locked='command:toSide:ipynb.newUntitledIpynb'}",
            "{Locked='command:toSide:workbench.action.files.openFolder'}",
            "{Locked='command:toSide:git.clone'}"
        ]
    },
    "contributes.walkthroughs.jupyterWelcome.steps.ipynb.newUntitledIpynb.media.altText": "Creating a new Jupyter notebook",
    "contributes.walkthroughs.jupyterWelcome.steps.jupyter.selectKernel.title": "Select a Jupyter kernel",
    "contributes.walkthroughs.jupyterWelcome.steps.jupyter.selectKernel.description": {
        "message": "Click Select Kernel at the top right of the notebook and choose the environment in which to run your kernel. Or, with a notebook opened and in focus, open the [Command Palette](command:workbench.action.showCommands) and run the command: \n``Notebook: Select Notebook Kernel``. \n[Open Command Palette to Select a Jupyter Kernel](command:workbench.action.showCommands)",
        "comment": ["{Locked='command:workbench.action.showCommands'}"]
    },
    "contributes.walkthroughs.jupyterWelcome.steps.jupyter.selectKernel.media.altText": "Selecting or changing a notebook kernel",
    "contributes.walkthroughs.jupyterWelcome.steps.jupyter.exploreAndDebug.title": "Explore data and debug",
    "contributes.walkthroughs.jupyterWelcome.steps.jupyter.exploreAndDebug.description": "ðŸ“… You can use the [Data Viewer](https://code.visualstudio.com/docs/datascience/data-science-tutorial#_prepare-the-data) to view, sort, and filter the rows of data. After loading your data, click \"Variables\" at the top right of notebook and click the Data Viewer icon to the left of the data table. \n \n[Learn about Data Viewer](https://code.visualstudio.com/docs/datascience/data-science-tutorial#_prepare-the-data)\n \nðŸ“’ Debug your notebook using the [Run by Line](https://code.visualstudio.com/docs/datascience/jupyter-notebooks#_run-by-line) mode to execute a cell one line at a time. Click the Run by Line icon from your cell (play button with lines) or hit F10. \n \n[Learn about Run by Line](https://code.visualstudio.com/docs/datascience/jupyter-notebooks#_run-by-line)",
    "contributes.walkthroughs.jupyterWelcome.steps.jupyter.exploreAndDebug.media.altText": "Opening data viewer",
    "contributes.walkthroughs.jupyterWelcome.steps.jupyter.dataScienceLearnMore.title": "Find out more!",
    "contributes.walkthroughs.jupyterWelcome.steps.jupyter.dataScienceLearnMore.description": {
        "message": "ðŸŽ¨ Explore all the features the Jupyter Extension has to offer by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n ðŸ“ˆ Learn more about getting started with data science in [Python](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) by installing the Python Extension ([search Python extension](command:workbench.extensions.search?\"ms-python.python\")). \n ðŸ“ƒ Find out more features in our [Tutorials](https://code.visualstudio.com/docs/datascience/jupyter-notebooks).  \n[Learn more](https://aka.ms/AAdar6q)",
        "comment": [
            "{Locked='command:workbench.action.showCommands'}",
            "{Locked='command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D'}",
            "{Locked='command:workbench.extensions.search?\"ms-python.python\")'}",
            "{Locked='docs/datascience/jupyter-notebooks'}"
        ]
    },
    "contributes.walkthroughs.jupyterWelcome.steps.jupyter.dataScienceLearnMore.media.altText": "Image representing our documentation page and mailing list resources.",
    "jupyter.command.dataScience.clearCache.title": "Clear Cache",
    "jupyter.command.jupyter.replayPylanceLog.title": "Replay Pylance Log",
    "jupyter.command.jupyter.replayPylanceLogStep.title": "Step Pylance Log",
    "jupyter.command.jupyter.exportAsPythonScript.title": "Export to Python Script",
    "jupyter.command.jupyter.exportToHTML.title": "Export to HTML",
    "jupyter.command.jupyter.exportToPDF.title": "Export to PDF",
    "jupyter.command.jupyter.debug.title": "Debug",
    "jupyter.command.jupyter.filterKernels.title": "Filter Kernels",
    "jupyter.command.jupyter.runByLine.title": "Run by Line",
    "jupyter.command.jupyter.debugCell.title": "Debug Cell",
    "jupyter.command.jupyter.runByLineNext.title": "Run Next Line",
    "jupyter.command.jupyter.runByLineStop.title": "Continue Execution",
    "DataScience.checkingIfImportIsSupported": {
        "message": "Checking if \"import\" is supported",
        "comment": ["{Locked='import'}"]
    },
    "DataScience.validatingKernelDependencies": {
        "message": "Validating kernel dependencies",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.installingMissingDependencies": "Installing missing dependencies",
    "DataScience.exportNotebookToPython": {
        "message": "Exporting Notebook to Python",
        "comment": ["{Locked='Notebook'}"]
    },
    "DataScience.performingExport": "Performing Export",
    "DataScience.convertingToPDF": "Converting to PDF",
    "DataScience.exportHTMLQuickPickLabel": "HTML",
    "DataScience.exportPDFQuickPickLabel": "PDF",
    "DataScience.openExportedFileMessage": "Would you like to open the exported file?",
    "DataScience.openExportFileYes": "Yes",
    "DataScience.openExportFileNo": "No",
    "DataScience.failedExportMessage": "Export failed.",
    "DataScience.validationErrorMessageForRemoteUrlProtocolNeedsToBeHttpOrHttps": "Has to be http(s)",
    "DataScience.exportFailedGeneralMessage": {
        "message": "Please check the 'Jupyter' [output](command:jupyter.viewOutput) panel for further details.",
        "comment": ["{Locked='command:jupyter.viewOutput'}"]
    },
    "DataScience.exportToPDFDependencyMessage": "If you have not installed xelatex (TeX) you will need to do so before you can export to PDF, for further instructions go to https://nbconvert.readthedocs.io/en/latest/install.html#installing-tex. \r\nTo avoid installing xelatex (TeX) you might want to try exporting to HTML and using your browsers \"Print to PDF\" feature.",
    "DataScience.insecureSessionMessage": "Connecting over HTTP without a token may be an insecure connection. Do you want to connect to a possibly insecure server?",
    "DataScience.insecureSessionDenied": "Denied connection to insecure server.",
    "DataScience.pythonNotInstalled": "Python is not installed. \nPlease download and install Python in order to execute cells in this notebook.",
    "DataScience.installKernel": {
        "message": "The Jupyter Kernel '{0}' could not be found and needs to be installed in order to execute cells in this notebook.",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.customizeLayout": "Customize Layout",
    "DataScience.warnWhenSelectingKernelWithUnSupportedPythonVersion": {
        "message": "The version of Python associated with the selected kernel is no longer supported. Please consider selecting a different kernel.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.activatingPythonEnvironment": "Activating Python Environment '{0}'",
    "jupyter.kernel.percentPipCondaInstallInsteadOfBang": {
        "message": "Use '%{0} install' instead of '!{0} install'",
        "comment": ["{Locked='{0} install'}"]
    },
    "jupyter.kernel.pipCondaInstallHoverWarning": {
        "message": "'!{0} install' could install packages into the wrong environment. [More info]({1})",
        "comment": ["{Locked='{0} install'}"]
    },
    "jupyter.kernel.replacePipCondaInstallCodeAction": {
        "message": "Replace with '%{0} install'",
        "comment": ["{Locked='{0} install'}"]
    },
    "jupyter.kernel.filter.placeholder": {
        "message": "Choose the kernels that are available in the kernel picker.",
        "comment": ["{Locked='kernel'}"]
    },
    "jupyter.kernel.category.jupyterSession": "(Remote) Jupyter Session",
    "jupyter.kernel.category.jupyterKernel": {
        "message": "Jupyter Kernel",
        "comment": ["{Locked='Kernel'}"]
    },
    "jupyter.kernel.category.jupyterRemoteKernel": {
        "message": "(Remote) Jupyter Kernel",
        "comment": ["{Locked='Kernel'}"]
    },
    "jupyter.kernel.category.conda": "Conda Env",
    "jupyter.kernel.category.poetry": {
        "message": "Poetry Env",
        "comment": ["{Locked='Poetry'}"]
    },
    "jupyter.kernel.category.pipenv": "Pipenv Env",
    "jupyter.kernel.category.pyenv": "PyEnv Env",
    "jupyter.kernel.category.global": "Global Env",
    "jupyter.kernel.category.virtual": "Virtual Env",
    "jupyter.command.jupyter.viewLanguageServerOutput.title": "Show Language Server Output",
    "jupyter.command.jupyter.selectAndRunTestMethod.title": "Run Test Method ...",
    "jupyter.command.jupyter.selectAndDebugTestMethod.title": "Debug Test Method ...",
    "jupyter.command.jupyter.selectAndRunTestFile.title": "Run Test File ...",
    "jupyter.command.jupyter.runCurrentTestFile.title": "Run Current Test File",
    "jupyter.command.jupyter.runFailedTests.title": "Run Failed Tests",
    "jupyter.command.jupyter.discoverTests.title": "Discover Tests",
    "jupyter.command.jupyter.discoveringTests.title": "Discovering...",
    "jupyter.command.jupyter.stopTests.title": "Stop",
    "jupyter.command.jupyter.configureTests.title": "Configure Tests",
    "jupyter.command.jupyter.execSelectionInTerminal.title": "Run Selection/Line in Python Terminal",
    "jupyter.command.jupyter.execSelectionInDjangoShell.title": "Run Selection/Line in Django Shell",
    "jupyter.command.jupyter.goToPythonObject.title": "Go to Python Object",
    "jupyter.command.jupyter.setLinter.title": "Select Linter",
    "jupyter.command.jupyter.enableLinting.title": "Enable Linting",
    "jupyter.command.jupyter.runLinting.title": "Run Linting",
    "jupyter.command.jupyter.runFileInteractive.title": "Run Current File in Interactive Window",
    "jupyter.command.jupyter.debugFileInteractive.title": "Debug Current File in Interactive Window",
    "jupyter.command.jupyter.runallcells.title": "Run All Cells",
    "jupyter.command.jupyter.notebookeditor.expandallcells.title": {
        "message": "Expand All Notebook Cells",
        "comment": ["{Locked='Notebook'}"]
    },
    "jupyter.command.jupyter.notebookeditor.collapseallcells.title": {
        "message": "Collapse All Notebook Cells",
        "comment": ["{Locked='Notebook'}"]
    },
    "jupyter.command.jupyter.runallcellsabove.title": "Run Above",
    "jupyter.command.jupyter.runcellandallbelow.title": "Run Below",
    "jupyter.command.jupyter.runallcellsabove.palette.title": "Run Cells Above Current Cell",
    "jupyter.command.jupyter.runcurrentcellandallbelow.palette.title": "Run Current Cell and Below",
    "jupyter.command.jupyter.debugcurrentcell.palette.title": "Debug Current Cell",
    "jupyter.command.jupyter.debugcell.title": "Debug Cell",
    "jupyter.command.jupyter.debugstepover.title": "Step Over",
    "jupyter.command.jupyter.debugcontinue.title": "Continue",
    "jupyter.command.jupyter.debugstop.title": "Stop",
    "jupyter.command.jupyter.runtoline.title": "Run To Line in Interactive Window",
    "jupyter.command.jupyter.runfromline.title": "Run From Line in Interactive Window",
    "jupyter.command.jupyter.runcurrentcell.title": "Run Current Cell",
    "jupyter.command.jupyter.runcurrentcelladvance.title": "Run Current Cell And Advance",
    "jupyter.command.jupyter.execSelectionInteractive.title": "Run Selection/Line in Interactive Window",
    "jupyter.command.jupyter.runcell.title": "Run Cell",
    "jupyter.command.jupyter.insertCellBelowPosition.title": "Insert Cell Below Position",
    "jupyter.command.jupyter.insertCellBelow.title": "Insert Cell Below",
    "jupyter.command.jupyter.insertCellAbove.title": "Insert Cell Above",
    "jupyter.command.jupyter.deleteCells.title": "Delete Selected Cells",
    "jupyter.command.jupyter.selectCell.title": "Select Cell",
    "jupyter.command.jupyter.selectCellContents.title": "Select Cell Contents",
    "jupyter.command.jupyter.extendSelectionByCellAbove.title": "Extend Selection By Cell Above",
    "jupyter.command.jupyter.extendSelectionByCellBelow.title": "Extend Selection By Cell Below",
    "jupyter.command.jupyter.moveCellsUp.title": "Move Selected Cells Up",
    "jupyter.command.jupyter.moveCellsDown.title": "Move Selected Cells Down",
    "jupyter.command.jupyter.changeCellToMarkdown.title": "Change Cell to Markdown",
    "jupyter.command.jupyter.changeCellToCode.title": "Change Cell to Code",
    "jupyter.command.jupyter.gotoNextCellInFile.title": "Go to Next Cell",
    "jupyter.command.jupyter.gotoPrevCellInFile.title": "Go to Previous Cell",
    "jupyter.command.jupyter.showhistorypane.title": "Show Interactive Window",
    "jupyter.command.jupyter.createnewinteractive.title": "Create Interactive Window",
    "jupyter.command.jupyter.selectjupyteruri.title": "Specify Jupyter Server for Connections",
    "DataScience.jupyterNativeNotebookUriStatusLabelForLocal": "Jupyter Server: Local",
    "DataScience.jupyterNativeNotebookUriStatusLabelForRemote": "Jupyter Server: Remote",
    "jupyter.command.jupyter.selectjupytercommandline.title": "Specify Jupyter Command Line Arguments",
    "jupyter.command.jupyter.importnotebook.title": {
        "message": "Import Jupyter Notebook",
        "comment": ["{Locked='Notebook'}"]
    },
    "jupyter.command.jupyter.importnotebookfile.title": "Convert to Python Script",
    "jupyter.command.jupyter.exportoutputasnotebook.title": {
        "message": "Export Interactive Window as Jupyter Notebook",
        "comment": ["{Locked='Notebook'}"]
    },
    "jupyter.command.jupyter.exportfileasnotebook.title": {
        "message": "Export Current Python File as Jupyter Notebook",
        "comment": ["{Locked='Notebook'}"]
    },
    "jupyter.command.jupyter.exportfileandoutputasnotebook.title": {
        "message": "Export Current Python File and Output as Jupyter Notebook",
        "comment": ["{Locked='Notebook'}"]
    },
    "jupyter.command.jupyter.undocells.title": "Undo Last Interactive Action",
    "jupyter.command.jupyter.redocells.title": "Redo Last Interactive Action",
    "jupyter.command.jupyter.removeallcells.title": "Delete All Interactive Cells",
    "jupyter.command.jupyter.notebookeditor.removeallcells.title": {
        "message": "Delete All Notebook Editor Cells",
        "comment": ["{Locked='Notebook'}"]
    },
    "jupyter.command.jupyter.notebookeditor.addcellbelow.title": {
        "message": "Add Empty Cell to Notebook File",
        "comment": ["{Locked='Notebook'}"]
    },
    "jupyter.command.jupyter.notebookeditor.keybind.undo.title": "Undo",
    "jupyter.command.jupyter.notebookeditor.keybind.save.title": "Save",
    "jupyter.command.jupyter.interruptkernel.title": {
        "message": "Interrupt Kernel",
        "comment": ["{Locked='Kernel'}"]
    },
    "jupyter.command.jupyter.interruptkernel.shorttitle": "Interrupt",
    "DataScience.restartKernel": {
        "message": "Restart Kernel",
        "comment": ["{Locked='Kernel'}"]
    },
    "jupyter.command.jupyter.restartkernel.title": {
        "message": "Restart Kernel",
        "comment": ["{Locked='Kernel'}"]
    },
    "jupyter.command.jupyter.restartkernel.shorttitle": "Restart",
    "jupyter.command.jupyter.expandallcells.title": "Expand All Interactive Cells",
    "jupyter.command.jupyter.collapseallcells.title": "Collapse All Interactive Cells",
    "jupyter.command.jupyter.expandallcells.shorttitle": "Expand",
    "jupyter.command.jupyter.collapseallcells.shorttitle": "Collapse",
    "jupyter.command.jupyter.addcellbelow.title": "Add Empty Cell to File",
    "jupyter.command.jupyter.createnewnotebook.title": "Create New Jupyter Notebook",
    "jupyter.command.jupyter.scrolltocell.title": "Scroll Cell Into View",
    "jupyter.command.jupyter.selectJupyterInterpreter.title": "Select Interpreter to Start Jupyter Server",
    "jupyter.command.jupyter.enableDebugLogging.title": "Enable Debug Logging",
    "jupyter.command.jupyter.resetLoggingLevel.title": "Reset Logging Level",
    "jupyter.command.jupyter.showDataViewer.title": "View Value in Data Viewer",
    "jupyter.command.jupyter.viewOutput.title": "Show Output",
    "DataScience.viewJupyterLogForFurtherInfo": {
        "message": "View Jupyter [log](command:jupyter.viewOutput) for further details.",
        "comment": ["{Locked='command:jupyter.viewOutput'}"]
    },
    "jupyter.showJupyterLogs": "Show Jupyter Logs",
    "jupyter.command.jupyter.clearSavedJupyterUris.title": "Clear Jupyter Remote Server List",
    "jupyter.command.jupyter.openVariableView.title": "Open Variables View",
    "jupyter.command.jupyter.openVariableView.shorttitle": "Variables",
    "jupyter.command.jupyter.openOutlineView.title": "Show Table Of Contents (Outline View)",
    "jupyter.command.jupyter.openOutlineView.shorttitle": "Outline",
    "DataScience.currentlySelectedJupyterInterpreterForPlaceholder": "current: {0}",
    "jupyter.command.jupyter.analysis.clearCache.title": "Clear Module Analysis Cache",
    "jupyter.command.jupyter.analysis.restartLanguageServer.title": "Restart Language Server",
    "jupyter.commandPalette.jupyter.replayPylanceLog.title": "Replay Pylance Log",
    "jupyter.notebookRenderer.IPyWidget.displayName": "Jupyter IPyWidget Renderer",
    "jupyter.notebookRenderer.Error.displayName": "Jupyter Error Renderer",
    "jupyter.debuggers.kernel": "Python Kernel Debug Adapter",
    "jupyter.debuggers.interactive": "Python Interactive Window",
    "jupyter.configuration.jupyter.experiments.enabled.description": "Enables/disables A/B tests.",
    "jupyter.configuration.jupyter.showVariableViewWhenDebugging.description": "Bring up the Variable View when starting a Run by Line session.",
    "jupyter.configuration.jupyter.logging.level.description": "The logging level the extension logs at.",
    "jupyter.configuration.jupyter.experiments.optInto.markdownDescription": "List of experiment to opt into. If empty, user is assigned the default experiment groups. [Learn more](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).",
    "jupyter.configuration.jupyter.experiments.optOutFrom.markdownDescription": "List of experiment to opt out of. If empty, user is assigned the default experiment groups. [Learn more](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).",
    "jupyter.configuration.jupyter.enableKeyboardShortcuts.deprecationMessage": "This setting has been deprecated as Jupyter keyboard shortcuts have been moved into the ms-toolsai.jupyter-keymap extension. If you would like to disable Jupyter keyboard shortcuts, please uninstall or disable that extension instead.",
    "jupyter.configuration.jupyter.enableKeyboardShortcuts.description": "Enables Jupyter style keyboard shortcuts for Notebooks.",
    "jupyter.configuration.jupyter.allowImportFromNotebook.deprecationMessage": "This setting is deprecated and will be removed in the next release.",
    "jupyter.configuration.jupyter.allowImportFromNotebook.description": "Allows a user to import a jupyter notebook into a python file anytime one is opened.",
    "jupyter.configuration.jupyter.widgetScriptSources.items.enumDescriptions.0": "Loads widget (javascript) scripts from https://www.jsdelivr.com/",
    "jupyter.configuration.jupyter.widgetScriptSources.items.enumDescriptions.1": "Loads widget (javascript) scripts from https://unpkg.com/",
    "jupyter.configuration.jupyter.widgetScriptSources.markdownDescription": "Defines the location and order of the sources where scripts files for Widgets are downloaded from (e.g. ipywidgest, bqplot, beakerx, ipyleaflet, etc). Not selecting any of these could result in widgets not rendering or function correctly. See [here](https://aka.ms/PVSCIPyWidgets) for more information. Once updated you will need to restart the Kernel.",
    "jupyter.configuration.jupyter.askForLargeDataFrames.description": "Warn the user before trying to open really large data frames.",
    "jupyter.configuration.jupyter.askForKernelRestart.description": "Warn the user before restarting a kernel.",
    "jupyter.configuration.jupyter.exportWithOutputEnabled.description": "Enable exporting a python file into a jupyter notebook and run all cells when doing so.",
    "jupyter.configuration.jupyter.jupyterLaunchTimeout.description": "Amount of time (in ms) to wait for the Jupyter Notebook server to start.",
    "jupyter.configuration.jupyter.jupyterLaunchRetries.description": "Number of times to attempt to connect to the Jupyter Notebook",
    "jupyter.configuration.jupyter.jupyterCommandLineArguments.description": "When a Notebook Editor or Interactive Window Jupyter server is started, these arguments will be passed to it. By default this list is generated by the Jupyter Extension.",
    "jupyter.configuration.jupyter.notebookFileRoot.description": "Set the root directory for running notebooks and the Interactive window.",
    "jupyter.configuration.jupyter.searchForJupyter.deprecationMessage": "This setting is deprecated and will be removed in the next release.",
    "jupyter.configuration.jupyter.searchForJupyter.description": "Search all installed Python interpreters for a Jupyter installation when starting the Interactive window",
    "jupyter.configuration.jupyter.useDefaultConfigForJupyter.description": "When running Jupyter locally, create a default empty Jupyter config for the Interactive window",
    "jupyter.configuration.jupyter.jupyterInterruptTimeout.description": "Amount of time (in ms) to wait for an interrupt before asking to restart the Jupyter kernel.",
    "jupyter.configuration.jupyter.allowInput.deprecationMessage": "This setting is deprecated and will be removed in the next release.",
    "jupyter.configuration.jupyter.allowInput.description": "Allow the inputting of python code directly into the Interactive window",
    "jupyter.configuration.jupyter.showCellInputCode.deprecationMessage": "This setting is deprecated and will be removed in the next release.",
    "jupyter.configuration.jupyter.showCellInputCode.description": "Show cell input code.",
    "jupyter.configuration.jupyter.collapseCellInputCodeByDefault.description": "Collapse cell input code by default.",
    "jupyter.configuration.jupyter.collapseCellInputCodeByDefault.markdownDeprecationMessage": {
        "message": "This setting has been deprecated, please use `#interactiveWindow.collapseCellInputCode#` instead.",
        "comment": ["{Locked='interactiveWindow.collapseCellInputCode'}"]
    },
    "jupyter.configuration.jupyter.maxOutputSize.deprecationMessage": "This setting is deprecated and will be removed in the next release.",
    "jupyter.configuration.jupyter.maxOutputSize.description": "Maximum size (in pixels) of text output in the Notebook Editor before a scrollbar appears. First enable scrolling for cell outputs in settings.",
    "jupyter.configuration.jupyter.alwaysScrollOnNewCell.description": "Automatically scroll the interactive window to show the output of the last statement executed. If false, the interactive window will only automatically scroll if the bottom of the prior cell is visible.",
    "jupyter.configuration.jupyter.alwaysScrollOnNewCell.deprecationMessage": {
        "message": "This setting is obsolete. Use the 'interactiveWindow.alwaysScrollOnNewCell' setting instead.",
        "comment": ["{Locked='interactiveWindow.alwaysScrollOnNewCell'}"]
    },
    "jupyter.configuration.jupyter.enableScrollingForCellOutputs.deprecationMessage": "This setting is deprecated and will be removed in the next release.",
    "jupyter.configuration.jupyter.enableScrollingForCellOutputs.description": "Enables scrolling for large cell outputs in the Notebook Editor. This setting does not apply to the Interactive Window.",
    "jupyter.configuration.jupyter.sendSelectionToInteractiveWindow.description": "When pressing shift+enter, send selected code in a Python file to the Jupyter interactive window as opposed to the Python terminal.",
    "jupyter.configuration.jupyter.variableExplorerExclude.description": "Types to exclude from showing in the Interactive variable explorer",
    "jupyter.configuration.jupyter.codeRegularExpression.description": "Regular expression used to identify code cells. All code until the next match is considered part of this cell.",
    "jupyter.configuration.jupyter.defaultCellMarker.description": "Cell marker used for delineating a cell in a python file.",
    "jupyter.configuration.jupyter.markdownRegularExpression.description": "Regular expression used to identify markdown cells. All comments after this expression are considered part of the markdown.",
    "jupyter.configuration.jupyter.allowLiveShare.deprecationMessage": "This setting is deprecated as Live Share support for the interactive window no longer exists in the Jupyter Extension.",
    "jupyter.configuration.jupyter.allowLiveShare.description": "Allow the Interactive window to be shared during a Live Share session",
    "jupyter.configuration.jupyter.ignoreVscodeTheme.deprecationMessage": "This setting is deprecated and will be removed in the next release.",
    "jupyter.configuration.jupyter.ignoreVscodeTheme.description": "Don't use the VS Code theme in the Interactive window (requires reload of VS Code). This forces the Interactive window to use 'Light +(default light)' and disables matplotlib defaults.",
    "jupyter.configuration.jupyter.themeMatplotlibPlots.description": "In the Interactive window and Notebook Editor theme matplotlib outputs to match the VS Code editor theme.",
    "jupyter.configuration.jupyter.liveShareConnectionTimeout.deprecationMessage": "This setting is deprecated and will be removed in the next release.",
    "jupyter.configuration.jupyter.liveShareConnectionTimeout.description": "Amount of time to wait for guest connections to verify they have the Python Extension installed.",
    "jupyter.configuration.jupyter.decorateCells.description": "Draw a highlight behind the currently active cell.",
    "jupyter.configuration.jupyter.enableCellCodeLens.description": "Enables code lens for 'cells' in a python file.",
    "jupyter.configuration.jupyter.enableAutoMoveToNextCell.description": "Enables moving to the next cell when clicking on a 'Run Cell' code lens.",
    "jupyter.configuration.jupyter.allowUnauthorizedRemoteConnection.description": "Allow for connecting the Interactive window to a https Jupyter server that does not have valid certificates. This can be a security risk, so only use for known and trusted servers.",
    "jupyter.configuration.jupyter.generateSVGPlots.description": "Generate SVG output for notebook plots. This allows for better display in the plot viewer at the cost of generation speed and file size.",
    "jupyter.configuration.jupyter.codeLenses.description": "Set of commands to put as code lens above a cell.",
    "jupyter.configuration.jupyter.debugCodeLenses.description": "Set of debug commands to put as code lens above a cell while debugging.",
    "jupyter.configuration.jupyter.debugpyDistPath.description": "Path to debugpy bits for debugging cells.",
    "jupyter.configuration.jupyter.stopOnFirstLineWhileDebugging.description": "When debugging a cell, stop on the first line.",
    "jupyter.configuration.jupyter.remoteDebuggerPort.description": "When debugging a cell, open this port on the remote box. If -1 is specified, a random port between 8889 and 9000 will be attempted.",
    "jupyter.configuration.jupyter.disableJupyterAutoStart.description": "When true, disables Jupyter from being automatically started for you. You must instead run a cell to start Jupyter.",
    "jupyter.configuration.jupyter.textOutputLimit.deprecationMessage": {
        "message": "This setting is deprecated in favor of `notebook.output.textLineLimit`. This setting will be removed in an upcoming release.",
        "comment": ["{Locked='notebook.output.textLineLimit'}"]
    },
    "jupyter.configuration.jupyter.textOutputLimit.description": "Limit the amount of text in Interactive cell text output to this value. 0 to allow any amount of characters.",
    "jupyter.configuration.jupyter.colorizeInputBox.deprecationMessage": "This setting is deprecated and will be removed in an upcoming release.",
    "jupyter.configuration.jupyter.colorizeInputBox.description": "Whether or not to use the theme's peek color as the background for the input box.",
    "jupyter.configuration.jupyter.stopOnError.description": "Stop running cells if a cell throws an exception.",
    "jupyter.configuration.jupyter.addGotoCodeLenses.description": {
        "message": "After running a cell, add a 'Goto' code lens on the cell. Note, disabling all code lenses disables this code lens as well.",
        "comment": ["{Locked='Goto'}"]
    },
    "jupyter.configuration.jupyter.variableQueries.markdownDescription": {
        "message": "Language to query mapping for returning the list of active variables in a Jupyter kernel. Used by the Variable Explorer in both the Interactive Window and Notebooks. Example:\n```\n[\n  {\n    \"language\": \"python\",\n    \"query\": \"%who_ls\",\n    \"parseExpr\": \"'(\\\\w+)'\"\n  }\n]\n```",
        "comment": ["{Locked='language\": \"python\",\n    \"query\": \"%who_ls\",\n    \"parseExpr'}"]
    },
    "jupyter.configuration.jupyter.kernels.filter.items.markdownDescription": "Fully qualified path to the kernel spec or the Python environment. \nE.g. `~/miniconda3/envs/sample/bin/python`.",
    "jupyter.configuration.jupyter.kernels.filter.markdownDescription": "List of Jupyter Kernels and/or Python environments that are to be excluded from the Kernel picker.",
    "jupyter.configuration.jupyter.interactiveWindowMode.description": {
        "message": "Behavior of the Interactive Window. 'perFile' will create a new interactive window for every file that runs a cell. 'single' allows a single window. 'multiple' allows the creation of multiple.",
        "comment": ["{Locked='perFile'}", "{Locked=\"'single'\"}", "{Locked=\"'multiple'\"}"]
    },
    "jupyter.configuration.jupyter.magicCommandsAsComments.description": "Uncomment shell assignments (#!), line magic (#!%) and cell magic (#!%%) when parsing code cells.",
    "jupyter.configuration.jupyter.pythonExportMethod.description": {
        "message": "The method to use when exporting a notebook to a Python file. 'direct' will copy over the code directly as is. 'commentMagics' will comment out lines starting with line magics (%), cell magics (%%), and shell commands(!). 'nbconvert' will install nbconvert and use that for the conversion which can translate iPython syntax into Python syntax.",
        "comment": ["{Locked=\"'direct'\"}", "{Locked=\"'commentMagics'\"}", "{Locked=\"'nbconvert'\"}"]
    },
    "jupyter.configuration.jupyter.runStartupCommands.description": {
        "message": "A series of Python instructions or iPython magic commands. Can be either an array of strings or a single string with commands separated by '\\n'. Commands will be silently executed whenever the interactive window loads. For instance, set this to '%load_ext autoreload\\n%autoreload 2' to automatically reload changes made to imported files without having to restart the interactive session.",
        "comment": ["{Locked='%load_ext autoreload\\n%autoreload 2'}"]
    },
    "jupyter.configuration.jupyter.debugJustMyCode.description": "When debugging, debug just my code.",
    "jupyter.configuration.jupyter.showOutlineButtonInNotebookToolbar.description": "Show the Outline button in the Jupyter notebook toolbar.",
    "jupyter.configuration.jupyter.newCellOnRunLast.description": "Append a new empty cell to an interactive window file on running the currently last cell.",
    "jupyter.configuration.jupyter.pylanceHandlesNotebooks.description": "Determines if Pylance manages notebook concat doc creation.",
    "jupyter.configuration.jupyter.pythonCompletionTriggerCharacters.description": "Characters which trigger auto completion on a python jupyter kernel.",
    "jupyter.configuration.jupyter.logKernelOutputSeparately.description": "Creates separate output panels for kernels/jupyter server console output",
    "jupyter.configuration.jupyter.excludeUserSitePackages.description": {
        "message": "Add PYTHONNOUSERSITE to kernels before starting. This prevents global/user site-packages from being used in the PYTHONPATH of the kernel.",
        "comment": ["{Locked='PYTHONNOUSERSITE'}", "{Locked='PYTHONPATH'}"]
    },
    "jupyter.configuration.jupyter.enableExtendedKernelCompletions.markdownDescription": "Enables Jedi support for extended IntelliSense completions in running Jupyter kernels (see this [setting](https://ipython.readthedocs.io/en/stable/config/options/terminal.html?highlight=use_jedi#configtrait-Completer.use_jedi)). This can greatly impact notebook cell execution performance. Use with caution.",
    "jupyter.configuration.jupyter.showOnlyOneTypeOfKernel.markdownDescription": "Show only one type of kernel in the kernel picker. This prevents local kernels and remote kernels from being shown at the same time in the kernel picker.",
    "Pylance.proposePylanceMessage": "Try out a new faster, feature-rich language server for Python by Microsoft, Pylance! Install the extension now.",
    "Pylance.tryItNow": "Try it now",
    "Pylance.remindMeLater": "Remind me later",
    "Pylance.installPylanceMessage": "Pylance extension is not installed. Click Yes to open Pylance installation page.",
    "Pylance.pylanceNotInstalledMessage": "Pylance extension is not installed.",
    "Pylance.pylanceInstalledReloadPromptMessage": "Pylance extension is now installed. Reload window to activate?",
    "DataScience.unknownMimeTypeFormat": "Mime type {0} is not currently supported.",
    "DataScience.historyTitle": "Interactive",
    "DataScience.dataExplorerTitle": "Data Viewer",
    "DataScience.badWebPanelFormatString": {
        "message": "<html><body><h1>{0} is not a valid file name</h1></body></html>",
        "comment": ["{Locked='body'}"]
    },
    "DataScience.sessionDisposed": "Cannot execute code, session has been disposed.",
    "DataScience.rawKernelProcessNotStarted": {
        "message": "Raw kernel process was not able to start.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.rawKernelProcessExitBeforeConnect": {
        "message": "Raw kernel process exited before connecting.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.passwordFailure": "Failed to connect to password protected server. Check that password is correct.",
    "DataScience.exportDialogTitle": {
        "message": "Export to Jupyter Notebook",
        "comment": ["{Locked='Notebook'}"]
    },
    "DataScience.exportDialogFilter": {
        "message": "Jupyter Notebooks",
        "comment": ["{Locked='Notebook'}"]
    },
    "DataScience.exportDialogComplete": {
        "message": "Notebook written to {0}",
        "comment": ["{Locked='Notebook'}"]
    },
    "DataScience.exportDialogFailed": "Failed to export notebook. {0}",
    "DataScience.exportOpenQuestion1": "Open in editor",
    "DataScience.notebookExport": "Export",
    "DataScience.exportAsNotebook.shorttitle": "Save",
    "DataScience.exportAs": "Export As",
    "DataScience.notebookExportAs": "Export As",
    "DataScience.notebookExportAs.shorttitle": "Export",
    "DataScience.exportAsQuickPickPlaceholder": "Export As...",
    "DataScience.exportPythonQuickPickLabel": "Python Script",
    "DataScience.collapseInputTooltip": "Collapse input block",
    "DataScience.collapseVariableExplorerTooltip": {
        "message": "Hide variables active in Jupyter kernel",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.collapseVariableExplorerLabel": "Variables",
    "DataScience.expandVariableExplorerTooltip": {
        "message": "Show variables active in Jupyter kernel",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.close": "Close",
    "DataScience.interactiveCopyCell": "Copy Cell",
    "DataScience.runInDedicatedExtensionHost": "Run in Dedicated Extension Host",
    "DataScience.variableLoadingValue": "Loading...",
    "DataScience.importDialogTitle": {
        "message": "Import Jupyter Notebook",
        "comment": ["{Locked='Notebook'}"]
    },
    "DataScience.importDialogFilter": {
        "message": "Jupyter Notebooks",
        "comment": ["{Locked='Notebook'}"]
    },
    "DataScience.notebookCheckForImportYes": "Import",
    "DataScience.reloadRequired": "Please reload the window for new settings to take effect.",
    "DataScience.notebookCheckForImportNo": "Later",
    "DataScience.notebookCheckForImportDontAskAgain": "Don't Ask Again",
    "DataScience.notebookCheckForImportTitle": {
        "message": "Do you want to import the Jupyter Notebook into Python code?",
        "comment": ["{Locked='Notebook'}"]
    },
    "DataScience.jupyterNotSupported": "Jupyter cannot be started. Error attempting to locate Jupyter: {0}",
    "DataScience.jupyterNotSupportedBecauseOfEnvironment": "Activating {0} to run Jupyter failed with {1}.",
    "DataScience.jupyterNbConvertNotSupported": "Importing notebooks requires Jupyter nbconvert to be installed.",
    "DataScience.removeRemoteJupyterConnectionButtonText": "Forget Connection",
    "DataScience.changeRemoteJupyterConnectionButtonText": "Manage Connections",
    "DataScience.jupyterLaunchNoURL": "Failed to find the URL of the launched Jupyter notebook server",
    "DataScience.jupyterLaunchTimedOut": "The Jupyter notebook server failed to launch in time",
    "DataScience.jupyterSelfCertFail": "The security certificate used by server {0} was not issued by a trusted certificate authority.\r\nThis may indicate an attempt to steal your information.\r\nDo you want to enable the Allow Unauthorized Remote Connection setting for this workspace to allow you to connect?",
    "DataScience.jupyterExpiredCertFail": "The security certificate used by server {0} has expired.\r\nThis may indicate an attempt to steal your information.\r\nDo you want to enable the Allow Unauthorized Remote Connection setting for this workspace to allow you to connect?",
    "DataScience.jupyterSelfCertFailErrorMessageOnly": "The security certificate used by server was not issued by a trusted certificate authority.\r\nThis may indicate an attempt to steal your information.",
    "DataScience.jupyterSelfCertExpiredErrorMessageOnly": "The security certificate used by server has expired.\r\nThis may indicate an attempt to steal your information.",
    "DataScience.jupyterSelfCertEnable": "Yes, connect anyways",
    "DataScience.jupyterSelfCertClose": "No, close the connection",
    "DataScience.jupyterServerCrashed": "Jupyter server crashed. Unable to connect. \r\nError code from Jupyter: {0}",
    "DataScience.rawConnectionDisplayName": {
        "message": "Direct kernel connection",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.rawConnectionBrokenError": {
        "message": "Direct kernel connection broken",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.pythonInteractiveHelpLink": "Get more help",
    "DataScience.markdownHelpInstallingMissingDependencies": "See [https://aka.ms/pyaiinstall](https://aka.ms/pyaiinstall) for help on installing Jupyter and related dependencies.",
    "DataScience.importingFormat": "Importing {0}",
    "DataScience.startingJupyter": "Starting Jupyter server",
    "DataScience.connectingToJupyter": "Connecting to Jupyter server",
    "DataScience.connectingToKernel": {
        "message": "Connecting to kernel: {0}",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.connectedToKernel": "Connected.",
    "DataScience.connected": "Connected",
    "DataScience.disconnected": "Disconnected",
    "Experiments.inGroup": "User belongs to experiment group '{0}'",
    "Logging.CurrentWorkingDirectory": "cwd:",
    "Logging.WarnUserAboutDebugLoggingSetting": "You have enabled debug logging for the Jupyter Extension, which will continue to write logs to disk. Would you like to turn debug logging off?",
    "Logging.YesTurnOffDebugLogging": "Yes, turn off debug logging",
    "Logging.NoResponse": "No",
    "Logging.NoAndDontAskAgain": "No, and don't ask again",
    "GitHubIssue.Failure": {
        "message": "We encountered an error while submitting your GitHub Issue. Would you still like to report an issue?",
        "comment": ["{Locked='Issue'}"]
    },
    "GitHubIssue.copyToClipboardAndOpenIssue": "Yes, copy content to clipboard and open issue",
    "GitHubIssue.pleaseFillThisOut": "Please fill this section out and delete this comment before submitting an issue!",
    "GitHubIssue.missingFields": {
        "message": "Please provide details of the issue you encountered before clicking Submit GitHub Issue.",
        "comment": ["{Locked='Issue'}"]
    },
    "GitHubIssue.askForIssueTitle": "Please provide a descriptive title summarizing your issue.",
    "GitHubIssue.titlePlaceholder": {
        "message": "E.g.: Unable to start a local kernel session",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.allowExtensionToUseJupyterKernelApi": {
        "message": "Do you want to give the extension '{0}' access to the Jupyter Kernels? Clicking '{1}' would allow this extension to execute code against the Jupyter Kernels.",
        "comment": ["{Locked='Kernels'}"]
    },
    "DataScience.thanksForUsingJupyterKernelApiPleaseRegisterWithUs": "Thanks for trying the Jupyter API. Please file an issue on our repo to use this API in production. This would prevent us from breaking your extension when updating the API (as it is still a work in progress).",
    "Common.bannerLabelYes": "Yes",
    "Common.bannerLabelNo": "No",
    "Common.doNotShowAgain": "Do not show again",
    "Common.reload": "Reload",
    "Common.moreInfo": "More Info",
    "Common.and": "and",
    "Common.download": "Download",
    "Common.ok": "Ok",
    "Common.install": "Install",
    "Common.learnMore": "Learn more",
    "Common.reportThisIssue": "Report this issue",
    "CommonSurvey.remindMeLaterLabel": "Remind me later",
    "CommonSurvey.yesLabel": "Yes, take survey now",
    "CommonSurvey.noLabel": "No, thanks",
    "Common.clickHereForMoreInfoWithHtml": "Click <a href='{0}'>here</a> for more info.",
    "OutputChannelNames.languageServer": "Python Language Server",
    "OutputChannelNames.python": "Python",
    "OutputChannelNames.pythonTest": "Python Test Log",
    "OutputChannelNames.jupyter": "Jupyter",
    "ExtensionSurveyBanner.bannerMessage": "Can you please take 2 minutes to tell us how the Jupyter Extension is working for you?",
    "ExtensionSurveyBanner.bannerLabelYes": "Yes, take survey now",
    "ExtensionSurveyBanner.bannerLabelNo": "No, thanks",
    "ExtensionSurveyBanner.maybeLater": "Maybe later",
    "DataScience.restartKernelMessage": {
        "message": "Do you want to restart the Jupyter kernel? All variables will be lost.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.restartKernelMessageYes": "Yes",
    "DataScience.restartingKernelFailed": {
        "message": "Kernel restart failed. Jupyter server is hung. Please reload VS Code.",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.interruptingKernelFailed": {
        "message": "Kernel interrupt failed. Jupyter server is hung. Please reload VS Code.",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScienceSurveyBanner.bannerMessage": "Can you please take 2 minutes to tell us how the Data Science features are working for you?",
    "DataScienceSurveyBanner.bannerLabelYes": "Yes, take survey now",
    "DataScienceSurveyBanner.bannerLabelNo": "No, thanks",
    "InteractiveShiftEnterBanner.bannerMessage": "Would you like to run code in the 'Interactive' window (an IPython console) for 'shift-enter'? Select 'No' to continue to run code in the Python Terminal. This can be changed later in settings.",
    "DataScience.restartingKernelStatus": {
        "message": "Restarting Kernel {0}",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.executingCode": "Executing Cell",
    "DataScience.collapseAll": "Collapse all cell inputs",
    "DataScience.expandAll": "Expand all cell inputs",
    "DataScience.export": "Export as Jupyter notebook",
    "DataScience.restartServer": {
        "message": "Restart Jupyter kernel",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.undo": "Undo",
    "DataScience.redo": "Redo",
    "DataScience.clearAll": "Remove all cells",
    "DataScience.restartedKernelHeader": {
        "message": "Restarted '{0}' kernel",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.restartingKernelCustomHeader": "_Restarting {0}..._",
    "DataScience.restartingKernelHeader": {
        "message": "_Restarting kernel..._",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.startedNewKernelHeader": {
        "message": "Started '{0}' kernel",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.connectKernelHeader": {
        "message": "Connected to '{0}' kernel",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.executingCodeFailure": "Executing code failed : {0}",
    "DataScience.inputWatermark": "Type code here and press shift-enter to run",
    "DataScience.deleteButtonTooltip": "Remove cell",
    "DataScience.gotoCodeButtonTooltip": "Go to code",
    "DataScience.copyBackToSourceButtonTooltip": "Paste code into file",
    "DataScience.copyToClipboardButtonTooltip": "Copy source to clipboard",
    "DataScience.plotOpen": "Expand image",
    "DataScience.libraryNotInstalled": "Data Science library {0} is not installed. Install?",
    "DataScience.libraryNotInstalledCorrectlyOrOutdated": "Data Science library {0} is not installed correctly or is outdated. Re-Install?",
    "DataScience.libraryRequiredToLaunchJupyterNotInstalled": "Running cells requires {0} package.",
    "DataScience.librariesRequiredToLaunchJupyterNotInstalled": "Running cells requires {0} package.",
    "DataScience.libraryRequiredToLaunchJupyterNotInstalledInterpreter": "Running cells with '{0}' requires {1} package.",
    "DataScience.librariesRequiredToLaunchJupyterNotInstalledInterpreter": "Running cells with '{0}' requires {1} package.",
    "DataScience.jupyterInstall": "Install",
    "DataScience.jupyterSelectURIPrompt": "Enter the URI of the running Jupyter server",
    "DataScience.jupyterSelectURIInvalidURI": "Invalid URI specified",
    "DataScience.jupyterSelectUserAndPasswordTitle": "Enter your user name and password to connect to Jupyter Hub",
    "DataScience.jupyterSelectUserPrompt": "Enter your user name",
    "DataScience.jupyterSelectPasswordPrompt": "Enter your password",
    "DataScience.removeRemoteJupyterServerEntryInQuickPick": "Remove",
    "DataScience.jupyterNotebookFailure": "Jupyter notebook failed to launch. \r\n{0}",
    "DataScience.remoteJupyterServerProvidedBy3rdPartyExtensionNoLongerValid": "The remote Jupyter Server contributed by the extension '{0}' is no longer available.",
    "DataScience.remoteJupyterConnectionFailedWithServer": "Failed to connect to the remote Jupyter Server '{0}'. Verify the server is running and reachable.",
    "DataScience.remoteJupyterConnectionFailedWithServerWithError": "Failed to connect to the remote Jupyter Server '{0}'. Verify the server is running and reachable. ({1}).",
    "DataScience.remoteJupyterConnectionFailedWithoutServerWithError": "Connection failure. Verify the server is running and reachable. ({0}).",
    "DataScience.remoteJupyterConnectionFailedWithoutServerWithErrorWeb": "Connection failure. Verify the server is running and reachable from a browser. ({0}). See 'https://aka.ms/vscjremoteweb' for more information.",
    "DataScience.jupyterNotebookRemoteConnectFailedWeb": "Failed to connect to remote Jupyter server.\r\nCheck that the Jupyter Server URI can be reached from a browser.\r\n{0}. Click [here](https://aka.ms/vscjremoteweb) for more information.",
    "DataScience.jupyterNotebookRemoteConnectSelfCertsFailed": "Failed to connect to remote Jupyter notebook.\r\nSpecified server is using self signed certs. Enable Allow Unauthorized Remote Connection setting to connect anyways\r\n{0}\r\n{1}",
    "DataScience.changeJupyterRemoteConnection": "Change Jupyter Server connection.",
    "DataScience.notebookVersionFormat": {
        "message": "Jupyter Notebook Version: {0}",
        "comment": ["{Locked='Notebook'}"]
    },
    "DataScience.jupyterKernelSpecNotFound": {
        "message": "Cannot create a Jupyter kernel spec and none are available for use",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.jupyterKernelSpecModuleNotFound": {
        "message": "'Kernelspec' module not installed in the selected interpreter ({0}).\n Please re-install or update 'jupyter'.",
        "comment": ["{Locked='Kernelspec'}"]
    },
    "DataScience.jupyterGetVariablesBadResults": "Failed to fetch variable info from the Jupyter server.",
    "DataScience.liveShareConnectFailure": "Cannot connect to host Jupyter session. URI not found.",
    "DataScience.liveShareCannotSpawnNotebooks": "Spawning Jupyter notebooks is not supported over a live share connection",
    "DataScience.liveShareCannotImportNotebooks": "Importing notebooks is not currently supported over a live share connection",
    "DataScience.liveShareHostFormat": "{0} Jupyter Server",
    "DataScience.liveShareSyncFailure": "Synchronization failure during live share startup.",
    "DataScience.liveShareServiceFailure": "Failure starting '{0}' service during live share connection.",
    "DataScience.documentMismatch": "Cannot run cells, duplicate documents for {0} found.",
    "DataScience.pythonInteractiveCreateFailed": "Failure to create a 'Interactive' window. Try reinstalling the Jupyter Extension.",
    "DataScience.interruptKernel": {
        "message": "Interrupt Jupyter kernel",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.clearAllOutput": "Clear All Output",
    "DataScience.exportingFormat": "Exporting {0}",
    "DataScience.exportCancel": "Cancel",
    "Common.canceled": "Canceled",
    "Common.cancel": "Cancel",
    "Common.yesPlease": "Yes, please",
    "DataScience.interruptKernelStatus": {
        "message": "Interrupting Jupyter Kernel",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.restartKernelAfterInterruptMessage": {
        "message": "Interrupting the kernel timed out. Do you want to restart the kernel instead? All variables will be lost.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.pythonInterruptFailedHeader": {
        "message": "Keyboard interrupt crashed the kernel. Kernel restarted.",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.sysInfoURILabel": "Jupyter Server URI: ",
    "DataScience.jupyterStartTimedout": "Starting Jupyter has timed out. Please check the 'Jupyter' output panel for further details.",
    "DataScience.startingJupyterLogMessage": "Starting Jupyter from {0} with command line {1}",
    "DataScience.jupyterCommandLineDefaultLabel": "Default (recommended)",
    "DataScience.jupyterCommandLineDefaultDetail": "The Jupyter Extension will determine the appropriate command line for Jupyter",
    "DataScience.jupyterCommandLineCustomLabel": "Custom",
    "DataScience.jupyterCommandLineCustomDetail": "Customize the command line passed to Jupyter on startup",
    "DataScience.jupyterCommandLineReloadQuestion": "Please reload the window when changing the Jupyter command line.",
    "DataScience.jupyterCommandLineReloadAnswer": "Reload",
    "DataScience.jupyterCommandLineQuickPickPlaceholder": "Choose an option",
    "DataScience.jupyterCommandLineQuickPickTitle": "Pick command line for Jupyter",
    "DataScience.jupyterCommandLinePrompt": "Enter your custom command line for Jupyter",
    "Common.loadingExtension": "Jupyter Extension loading...",
    "Common.openOutputPanel": "Show output",
    "DataScience.variableExplorerNameColumn": "Name",
    "DataScience.variableExplorerTypeColumn": "Type",
    "DataScience.variableExplorerCountColumn": "Size",
    "DataScience.variableExplorerValueColumn": "Value",
    "DataScience.showDataExplorerTooltip": "Show variable snapshot in data viewer",
    "DataScience.dataExplorerInvalidVariableFormat": "'{0}' is not an active variable.",
    "DataScience.jupyterGetVariablesExecutionError": "Failure during variable extraction:\r\n{0}",
    "DataScience.loadingMessage": "loading ...",
    "DataScience.fetchingDataViewer": "Fetching data ...",
    "DataScience.noRowsInDataViewer": "No rows match current filter",
    "DataScience.jupyterServer": "Jupyter Server",
    "DataScience.noKernel": {
        "message": "No Kernel",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.serverNotStarted": "Not Started",
    "DataScience.localJupyterServer": "local",
    "DataScience.pandasTooOldForViewingFormat": "Python package 'pandas' is version {0}. Version {1} or greater is required for viewing data.",
    "DataScience.pandasRequiredForViewing": "Python package 'pandas' version {0} (or above) is required for viewing data.",
    "DataScience.failedToGetVersionOfPandas": "Failed to get version of Pandas to use the Data Viewer.",
    "DataScience.valuesColumn": "values",
    "DataScience.liveShareInvalid": "One or more guests in the session do not have the Jupyter [extension](https://marketplace.visualstudio.com/itemdetails?itemName=ms-toolsai.jupyter) installed.\r\nYour Live Share session cannot continue and will be closed.",
    "Common.noIWillDoItLater": "No, I will do it later",
    "Common.notNow": "Not now",
    "Common.gotIt": "Got it!",
    "DataScience.noRowsInVariableExplorer": "No variables defined",
    "DataScience.loadingRowsInVariableExplorer": "Loading variables",
    "DataScience.tooManyColumnsMessage": "Variables with over a 1000 columns may take a long time to display. Are you sure you wish to continue?",
    "DataScience.tooManyColumnsYes": "Yes",
    "DataScience.tooManyColumnsNo": "No",
    "DataScience.tooManyColumnsDontAskAgain": "Don't Ask Again",
    "DataScience.filterRowsTooltip": "Allows filtering multiple rows. Use =, >, or < signs to filter numeric values.",
    "DataScience.previewHeader": "--- Begin preview of {0} ---",
    "DataScience.previewFooter": "--- End preview of {0} ---",
    "DataScience.previewStatusMessage": "Generating preview of {0}",
    "DataScience.plotViewerTitle": "Plots",
    "DataScience.exportPlotTitle": "Save plot image",
    "DataScience.pdfFilter": "PDF",
    "DataScience.pngFilter": "PNG",
    "DataScience.svgFilter": "SVG",
    "DataScience.previousPlot": "Previous",
    "DataScience.nextPlot": "Next",
    "DataScience.panPlot": "Pan",
    "DataScience.zoomInPlot": "Zoom in",
    "DataScience.zoomOutPlot": "Zoom out",
    "DataScience.exportPlot": "Export to different formats",
    "DataScience.deletePlot": "Remove",
    "DataScience.collapseSingle": "Collapse",
    "DataScience.expandSingle": "Expand",
    "DataScience.editSection": "Input new cells here.",
    "DataScience.restartKernelMessageDontAskAgain": "Yes, and Don't Ask Again",
    "DataScience.selectedImageListLabel": "Selected Image",
    "DataScience.imageListLabel": "Image",
    "DataScience.exportImageFailed": "Error exporting image: {0}",
    "downloading.file": "Downloading {0}...",
    "downloading.file.progress": "{0}{1} of {2} KB ({3}%)",
    "DataScience.jupyterDataRateExceeded": {
        "message": "Cannot view variable because data rate exceeded. Please restart your server with a higher data rate limit. For example, --NotebookApp.iopub_data_rate_limit=10000000000.0",
        "comment": ["{Locked='NotebookApp.iopub_data_rate_limit'}"]
    },
    "DataScience.addCellBelowCommandTitle": "Add cell",
    "DataScience.debugCellCommandTitle": "Debug Cell",
    "DataScience.debugStepOverCommandTitle": "Step over",
    "DataScience.debugContinueCommandTitle": "Continue",
    "DataScience.debugStopCommandTitle": "Stop",
    "DataScience.runCurrentCellAndAddBelow": "Run current cell and add empty cell below",
    "DataScience.jupyterDebuggerNotInstalledError": "Pip module {0} is required for debugging cells. You will need to install it to debug cells.",
    "DataScience.jupyterDebuggerOutputParseError": "Unable to parse {0} output, please log an issue with https://github.com/microsoft/vscode-jupyter",
    "DataScience.jupyterDebuggerPortNotAvailableError": {
        "message": "Port {0} cannot be opened for debugging. Please specify a different port in the remoteDebuggerPort setting.",
        "comment": ["{Locked='remoteDebuggerPort'}"]
    },
    "DataScience.jupyterDebuggerPortBlockedError": "Port {0} cannot be connected to for debugging. Please let port {0} through your firewall.",
    "DataScience.jupyterDebuggerPortNotAvailableSearchError": {
        "message": "Ports in the range {0}-{1} cannot be found for debugging. Please specify a port in the remoteDebuggerPort setting.",
        "comment": ["{Locked='remoteDebuggerPort'}"]
    },
    "DataScience.jupyterDebuggerPortBlockedSearchError": "A port cannot be connected to for debugging. Please let ports {0}-{1} through your firewall.",
    "DataScience.jupyterDebuggerInstallNew": "Pip module {0} is required for debugging cells. Install {0} and continue to debug cell?",
    "DataScience.jupyterDebuggerInstallNewRunByLine": "Pip module {0} is required for running by line. Install {0} and continue to run by line?",
    "DataScience.jupyterDebuggerInstallUpdate": "The version of {0} installed does not support debugging cells. Update {0} to newest version and continue to debug cell?",
    "DataScience.jupyterDebuggerInstallUpdateRunByLine": "The version of {0} installed does not support running by line. Update {0} to newest version and continue to run by line?",
    "DataScience.jupyterDebuggerInstallYes": "Yes",
    "DataScience.jupyterDebuggerInstallNo": "No",
    "DataScience.cellStopOnErrorMessage": "Cell was canceled due to an error in a previous cell.",
    "DataScience.instructionComments": "# To add a new cell, type '{0}'\n# To add a new markdown cell, type '{0} [markdown]'\n",
    "DataScience.scrollToCellTitleFormatMessage": "Go to [{0}]",
    "DataScience.save": "Save notebook",
    "DataScience.nativeEditorTitle": {
        "message": "Notebook Editor",
        "comment": ["{Locked='Notebook'}"]
    },
    "DataScience.untitledNotebookFileName": "Untitled",
    "DataScience.dirtyNotebookMessage1": "Do you want to save the changes you made to {0}?",
    "DataScience.dirtyNotebookMessage2": "Your changes will be lost if you don't save them.",
    "DataScience.dirtyNotebookYes": "Save",
    "DataScience.dirtyNotebookNo": "Don't Save",
    "DataScience.dirtyNotebookCancel": "Cancel",
    "DataScience.dirtyNotebookDialogTitle": "Save",
    "DataScience.dirtyNotebookDialogFilter": {
        "message": "Jupyter Notebooks",
        "comment": ["{Locked='Notebook'}"]
    },
    "DataScience.exportAsPythonFileTooltip": "Convert and save to a Python script",
    "DataScience.exportAsPythonFileTitle": "Save as Python File",
    "DataScience.exportButtonTitle": "Export",
    "DataScience.runCell": "Run cell",
    "DataScience.deleteCell": "Delete cell",
    "DataScience.moveCellUp": "Move cell up",
    "DataScience.moveCellDown": "Move cell down",
    "DataScience.moveSelectedCellUp": "Move selected cell up",
    "DataScience.insertBelow": "Insert cell below",
    "DataScience.insertAbove": "Insert cell above",
    "DataScience.addCell": "Add cell",
    "DataScience.runAll": "Run all cells",
    "DataScience.toggleCellOutput": "Toggle Cell Output",
    "DataScience.convertingToPythonFile": "Converting ipynb to python file",
    "DataScience.untitledNotebookMessage": "Your changes will be lost if you don't save them.",
    "DataScience.untitledNotebookYes": "Save",
    "DataScience.untitledNotebookNo": "Cancel",
    "DataScience.noInterpreter": "No python selected",
    "DataScience.notebookNotFound": {
        "message": "python -m jupyter notebook --version is not running",
        "comment": ["{Locked='python -m jupyter notebook --version'}"]
    },
    "DataScience.savePngTitle": "Save Image",
    "DataScience.jupyterSelectURIQuickPickTitle": "Enter the URI of the running Jupyter server",
    "DataScience.jupyterSelectURIQuickPickTitleOld": "Pick how to connect to Jupyter",
    "DataScience.jupyterSelectURIQuickPickPlaceholder": "Choose an option",
    "DataScience.jupyterSelectURIQuickPickCurrent": "Current: {0}",
    "DataScience.jupyterSelectURINoneLabel": "None",
    "DataScience.jupyterSelectURINoneDetail": "Do not connect to any remote Jupyter server",
    "DataScience.jupyterSelectURINewLabel": "Existing",
    "DataScience.jupyterSelectURINewDetail": "Specify the URI of an existing server",
    "DataScience.jupyterSelectURIMRUDetail": "Last Connection: {0}",
    "DataScience.jupyterSelectURIRunningDetailFormat": "Last connection {0}. {1} existing connections.",
    "DataScience.jupyterSelectURINotRunningDetail": "Cannot connect at this time. Status unknown.",
    "DataScience.fallbackToUseActiveInterpreterAsKernel": {
        "message": "Couldn't find kernel '{0}' that the notebook was created with. Using the current interpreter.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.fallBackToRegisterAndUseActiveInterpreterAsKernel": {
        "message": "Couldn't find kernel '{0}' that the notebook was created with. Registering a new kernel using the current interpreter.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.fallBackToPromptToUseActiveInterpreterOrSelectAKernel": {
        "message": "Couldn't find kernel '{0}' that the notebook was created with.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.selectKernel": {
        "message": "Change Kernel",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.selectDifferentKernel": {
        "message": "Select a different Kernel",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.selectDifferentJupyterInterpreter": "Change Interpreter",
    "DataScience.selectJupyterInterpreter": "Select an Interpreter to start Jupyter",
    "DataScience.switchingKernelProgress": {
        "message": "Switching kernel to '{0}'",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.sessionStartFailedWithKernel": {
        "message": "Failed to start the Kernel '{0}'. \nView Jupyter [log](command:jupyter.viewOutput) for further details.",
        "comment": ["{Locked='Kernel'}", "{Locked='command:jupyter.viewOutput'}"]
    },
    "DataScience.failedToStartKernel": {
        "message": "Failed to start the Kernel.",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.failedToRestartKernel": {
        "message": "Failed to restart the Kernel.",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.failedToInterruptKernel": {
        "message": "Failed to interrupt the Kernel.",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.kernelDied": {
        "message": "The kernel died. View Jupyter [log](command:jupyter.viewOutput) for further details. \nError: {0}...",
        "comment": ["{Locked='command:jupyter.viewOutput'}"]
    },
    "DataScience.kernelDiedWithoutError": {
        "message": "The kernel '{0}' died. Click [here](https://aka.ms/vscodeJupyterKernelCrash) for more info. View Jupyter [log](command:jupyter.viewOutput) for further details.",
        "comment": ["{Locked='Kernel'}", "{Locked='command:jupyter.viewOutput'}", "{Locked='vscodeJupyterKernelCrash'}"]
    },
    "DataScience.kernelDiedWithoutErrorAndAutoRestarting": {
        "message": "The kernel '{0}' died and is being automatically restarted by Jupyter. Click [here](https://aka.ms/vscodeJupyterKernelCrash) for more info. View Jupyter [log](command:jupyter.viewOutput) for further details.",
        "comment": ["{Locked='Kernel'}", "{Locked='command:jupyter.viewOutput'}", "{Locked='vscodeJupyterKernelCrash'}"]
    },
    "DataScience.kernelCrashedDueToCodeInCurrentOrPreviousCell": {
        "message": "The Kernel crashed while executing code in the the current cell or a previous cell. Please review the code in the cell(s) to identify a possible cause of the failure. Click <a href='https://aka.ms/vscodeJupyterKernelCrash'>here</a> for more info. View Jupyter [log](command:jupyter.viewOutput) for further details.",
        "comment": ["{Locked='Kernel'}", "{Locked='command:jupyter.viewOutput'}", "{Locked='vscodeJupyterKernelCrash'}"]
    },
    "DataScience.fileSeemsToBeInterferingWithKernelStartup": {
        "message": "The file '{0}' seems to be overriding built in modules and interfering with the startup of the kernel. Consider renaming the file and starting the kernel again.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.DataScience.moduleSeemsToBeInterferingWithKernelStartup": {
        "message": "The module '{0}' seems to be overriding built in modules and interfering with the startup of the kernel. Consider renaming the folder and starting the kernel again.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.failedToStartKernelDueToMissingModule": {
        "message": "The kernel failed to start due to the missing module '{0}'. Consider installing this module.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.failedToStartKernelDueToImportFailure": {
        "message": "The kernel failed to start as the module '{0}' could not be imported.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.failedToStartKernelDueToImportFromFileFailure": {
        "message": "The kernel failed to start as '{0}' could not be imported from '{1}'.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.failedToStartKernelDueToUnknownDllLoadFailure": {
        "message": "The kernel failed to start as a dll could not be loaded.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.failedToStartKernelDueToDllLoadFailure": {
        "message": "The kernel failed to start as the dll '{0}' could not be loaded.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.failedToStartKernelDueToWin32APIFailure": {
        "message": "The kernel failed to start due to an error with the Win32api module. Consider (re) installing this module.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.failedToStartKernelDueToPyZmqFailure": {
        "message": "The kernel failed to start due to an error with the 'pyzmq' module. Consider re-installing this module.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.failedToStartKernelDueToOldIPython": {
        "message": "The kernel failed to start due to an outdated version of IPython. Consider updating this module to the latest version.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.failedToStartKernelDueToOldIPyKernel": {
        "message": "The kernel failed to start due to an outdated version of IPyKernel. Consider updating this module to the latest version.",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.failedToStartJupyter": {
        "message": "Failed to start Jupyter in the environment '{0}'. \nView Jupyter [log](command:jupyter.viewOutput) for further details.",
        "comment": ["{Locked='command:jupyter.viewOutput'}"]
    },
    "DataScience.failedToStartJupyterWithErrorInfo": {
        "message": "Failed to start Jupyter in the environment '{0}'. \n{1} \nView Jupyter [log](command:jupyter.viewOutput) for further details.",
        "comment": ["{Locked='command:jupyter.viewOutput'}"]
    },
    "DataScience.failedToStartJupyterDueToOutdatedTraitlets": {
        "message": "Failed to start Jupyter in the environment '{0}' possibly due to an outdated version of 'traitlets'. \n{1} \nConsider updating the 'traitlets' module to '5.1.1' or later. \nView Jupyter [log](command:jupyter.viewOutput) for further details.",
        "comment": ["{Locked='command:jupyter.viewOutput'}", "{Locked='traitlets'}"]
    },
    "DataScience.installPackageInstructions": "Run the following command to install '{0}' into the Python environment. \nCommand: '{1}'",
    "DataScience.cannotRunCellKernelIsDead": {
        "message": "Cannot run cells, as the kernel '{0}' is dead.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.waitingForJupyterSessionToBeIdle": "Waiting for Jupyter Session to be idle",
    "DataScience.gettingListOfKernelsForLocalConnection": {
        "message": "Fetching Kernels",
        "comment": ["{Locked='Kernels'}"]
    },
    "DataScience.gettingListOfKernelsForRemoteConnection": {
        "message": "Fetching Kernels",
        "comment": ["{Locked='Kernels'}"]
    },
    "DataScience.gettingListOfKernelSpecs": {
        "message": "Fetching Kernel specs",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.startingJupyterNotebook": {
        "message": "Starting Jupyter Notebook",
        "comment": ["{Locked='Notebook'}"]
    },
    "DataScience.registeringKernel": {
        "message": "Registering Kernel",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.trimmedOutput": {
        "message": "Output was trimmed for performance reasons.\nTo see the full output set the setting \"jupyter.textOutputLimit\" to 0.",
        "comment": ["{Locked='textOutputLimit'}"]
    },
    "DataScience.connectingToJupyterUri": "Connecting to Jupyter server at {0}",
    "DataScience.createdNewNotebook": "{0}: Creating new notebook ",
    "DataScience.createdNewKernel": {
        "message": "{0}: Kernel started: {1}",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.kernelInvalid": {
        "message": "Kernel {0} is not usable. Check the Jupyter output tab for more information.",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.nativeDependencyFail": "We cannot launch a Jupyter server because your OS is not supported. Select an already running server if you wish to continue. {0}",
    "DataScience.selectNewServer": "Pick Running Server",
    "DataScience.jupyterSelectURIRemoteLabel": "Existing",
    "DataScience.jupyterSelectURIQuickPickTitleRemoteOnly": "Pick an already running Jupyter server",
    "DataScience.jupyterSelectURIRemoteDetail": "Specify the URI of an existing server",
    "DataScience.latestExtension": "Download the latest version of the Jupyter Extension",
    "DataScience.loadClassFailedWithNoInternet": "Error loading {0}:{1}. Internet connection required for loading 3rd party widgets.",
    "DataScience.useCDNForWidgets": "Widgets require us to download supporting files from a 3rd party website. Click [here](https://aka.ms/PVSCIPyWidgets) for more information.",
    "DataScience.useCDNForWidgetsNoInformation": "Widgets require us to download supporting files from a 3rd party website.",
    "DataScience.enableCDNForWidgetsSettingHtml": "Widgets require us to download supporting files from a 3rd party website. Click <a href='https://command:jupyter.enableLoadingWidgetScriptsFromThirdPartySource'>here</a> to enable this or click <a href='https://aka.ms/PVSCIPyWidgets'>here</a> for more information. (Error loading {0}:{1}).",
    "DataScience.enableCDNForWidgetsSetting": "Widgets require us to download supporting files from a 3rd party website. (Error loading {0}:{1}).",
    "DataScience.enableCDNForWidgetsButton": "Enable Downloads",
    "DataScience.widgetScriptNotFoundOnCDNWidgetMightNotWork": "Unable to find widget '{0}' version '{1}' from configured widget sources {2}. Expected behavior may be affected. Click [here](https://aka.ms/PVSCIPyWidgets) for more information.",
    "DataScience.cdnWidgetScriptNotAccessibleWarningMessage": "Unable to download widget '{0}' from 3rd party website {1}, due to network access. Expected behavior may be affected. Click [here](https://aka.ms/PVSCIPyWidgets) for more information.",
    "DataScience.unhandledMessage": {
        "message": "Unhandled kernel message from a widget: {0} : {1}",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.qgridWidgetScriptVersionCompatibilityWarning": "Unable to load a compatible version of the widget 'qgrid'. Consider downgrading to version 1.1.1.",
    "DataScience.kernelStarted": {
        "message": "Started kernel {0}",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.kernelStarting": {
        "message": "_Connecting to kernel..._",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.kernelStartingCustom": "_Connecting to {0}..._",
    "DataScience.libraryRequiredToLaunchJupyterKernelNotInstalledInterpreter": "Running cells with '{0}' requires {1} package.",
    "DataScience.libraryRequiredToLaunchJupyterKernelNotInstalledInterpreterAndRequiresUpdate": "Running cells with '{0}' requires {1} package installed or requires an update.",
    "DataScience.runByLine": "Run by line (F10)",
    "DataScience.stopRunByLine": "Stop",
    "DataScience.couldNotInstallLibrary": "Could not install {0} package. If pip is not available, please use the package manager of your choice to manually install this library into your Python environment.",
    "DataScience.rawKernelSessionFailed": {
        "message": "Unable to start session for kernel {0}. Select another kernel to launch with.",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.rawKernelStartFailedDueToTimeout": {
        "message": "Unable to start Kernel '{0}' due to connection timeout. \nView Jupyter [log](command:jupyter.viewOutput) for further details.",
        "comment": ["{Locked='Kernel'}", "{Locked='command:jupyter.viewOutput'}"]
    },
    "DataScience.rawKernelConnectingSession": {
        "message": "Connecting to kernel {0}",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.reloadCustomEditor": "Please reload VS Code to use the custom editor API",
    "DataScience.reloadVSCodeNotebookEditor": {
        "message": "Please reload VS Code to use the Notebook Editor",
        "comment": ["{Locked='Notebook'}"]
    },
    "DataScience.step": "Run next line (F10)",
    "DataScience.usingPreviewNotebookWithOtherNotebookWarning": {
        "message": "Opening the same file in the Preview Notebook Editor and stable Notebook Editor is not recommended. Doing so could result in data loss or corruption of notebooks.",
        "comment": ["{Locked='Notebook'}"]
    },
    "DataScience.unknownServerUri": "Server URI cannot be used. Did you uninstall an extension that provided a Jupyter server connection?",
    "DataScienceRendererExtension.installingExtension": {
        "message": "Installing Notebook Renderers extension...",
        "comment": ["{Locked='Notebook'}"]
    },
    "DataScienceRendererExtension.installationCompleteMessage": "complete.",
    "DataScienceRendererExtension.startingDownloadOutputMessage": {
        "message": "Starting download of Notebook Renderers extension.",
        "comment": ["{Locked='Notebook'}"]
    },
    "DataScienceRendererExtension.downloadingMessage": {
        "message": "Downloading Notebook Renderers Extension...",
        "comment": ["{Locked='Notebook'}"]
    },
    "DataScienceRendererExtension.downloadCompletedOutputMessage": {
        "message": "Notebook Renderers extension download complete.",
        "comment": ["{Locked='Notebook'}"]
    },
    "DataScience.uriProviderDescriptionFormat": "{0} (From {1} extension)",
    "DataScience.unknownPackage": "unknown",
    "DataScience.interactiveWindowTitle": "Interactive",
    "DataScience.interactiveWindowTitleFormat": "Interactive - {0}",
    "DataScience.interactiveWindowModeBannerTitle": {
        "message": "Do you want to open a new Interactive window for this file? [More Information](command:workbench.action.openSettings?%5B%22jupyter.interactiveWindowMode%22%5D).",
        "comment": ["{Locked='workbench.action.openSettings?%5B%22jupyter.interactiveWindowMode'}"]
    },
    "DataScience.interactiveWindowModeBannerSwitchYes": "Yes",
    "DataScience.interactiveWindowModeBannerSwitchAlways": "Always",
    "DataScience.interactiveWindowModeBannerSwitchNo": "No",
    "DataScience.noKernelsSpecifyRemote": {
        "message": "No kernel available for cell execution, please [specify a Jupyter server for connections](command:jupyter.selectjupyteruri)",
        "comment": ["{Locked='kernel'}", "{Locked='command:jupyter.selectjupyteruri'}"]
    },
    "DataScience.ipykernelNotInstalled": {
        "message": "IPyKernel not installed into interpreter {0}",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.ipykernelNotInstalledBecauseCanceled": {
        "message": "IPyKernel not installed into interpreter. Installation canceled.",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.needIpykernel6": {
        "message": "Ipykernel setup required for this feature",
        "comment": ["{Locked='kernel'}"]
    },
    "DataScience.setup": "Setup",
    "DataScience.startingRunByLine": "Starting Run by Line",
    "DataScience.illegalEditorConfig": {
        "message": "CustomEditor and NativeNotebook experiments cannot be turned on together",
        "comment": ["{Locked='Notebook'}"]
    },
    "DataScience.pythonExtensionRequired": "The Python Extension is required to perform that task. Click Yes to open Python Extension installation page.",
    "DataScience.pythonExtensionRequiredToRunNotebook": "Python Extension required to run Python notebooks.",
    "DataScience.installingPythonExtension": "Installing Python extension and locating kernels.",
    "DataScience.pythonExtensionInstalled": "Python Extension is now installed. Some features might not be available until a notebook or interactive window session is restarted.",
    "DataScience.showDataViewerFail": "Failed to create the Data Viewer. Check the Jupyter tab of the Output window for more info.",
    "DataScience.notebookCreationPickerPlaceHolder": "Select an option to create a blank notebook",
    "DataScience.refreshDataViewer": "Refresh data viewer",
    "DataScience.refreshDataViewerCommandPalette": "Refresh Data Viewer",
    "DataScience.sliceDropdownAxisLabel": "Axis",
    "DataScience.sliceDropdownIndexLabel": "Index",
    "DataScience.sliceSubmitButton": "Apply",
    "DataScience.sliceSummaryTitle": "SLICING",
    "DataScience.dataViewerShowFilters": "Show filters",
    "DataScience.dataViewerHideFilters": "Hide filters",
    "DataScience.sliceData": "Slice Data",
    "DataScience.sliceIndexError": "Index {0} out of range for axis {1} with {2} elements",
    "DataScience.sliceMismatchedAxesError": "Expected {0} axes, got {1} in slice expression",
    "DataScience.clearFilters": "Clear all filters",
    "DataScience.defaultNotebookName": "default",
    "DataScience.recommendExtensionForNotebook": "The {0} extension is recommended for notebooks targeting the language '{1}'",
    "DataScience.interactiveClearAllCells": "Clear All",
    "DataScience.interactiveRemoveCell": "Remove Cell",
    "DataScience.interactiveGoToCode": "Go to code",
    "DataScience.kernelWasNotStarted": {
        "message": "Kernel was not started. A kernel session is needed to start debugging.",
        "comment": ["{Locked='Kernel'}"]
    },
    "DataScience.noNotebookToDebug": "No active notebook document to debug.",
    "DataScience.cantStartDebugging": "Can't start debugging.",
    "DataScience.customEditorBanner": {
        "message": "This editor is deprecated and we'll remove it after 1.59 of VS Code.  [Learn more about our new notebook editor](https://aka.ms/vscodeNotebookEditorBanner).",
        "comment": ["{Locked='Notebook'}", "{Locked='vscodeNotebookEditorBanner'}"]
    },
    "DataScience.importingIpynb": "Importing notebook file.",
    "DataScience.exportingToFormat": "Exporting to {0}.",
    "DataScience.matplotlibWidgetInsteadOfOther": "'%matplotlib widget' or '%matplotlib inline' works best in VS Code notebooks.",
    "DataScience.matplotlibWidgetCodeActionTitle": "More information",
    "DataScience.usingNonPrereleaseYes": "Yes",
    "DataScience.usingNonPrereleaseNo": "No",
    "DataScience.usingNonPrereleaseNoAndDontAskAgain": "Don't ask again",
    "DataScience.usingNonPrerelease": "The 'prerelease' version of the Jupyter Extension is recommended when running on VS Code Insiders. Would you like to switch?",
    "DataScience.cellAtFormat": "{0} Cell {1}'",
    "DataScience.jupyterServerConsoleOutputChannel": "Jupyter Server Console",
    "DataScience.kernelConsoleOutputChannel": {
        "message": "{0} Kernel Console Output",
        "comment": ["{Locked='Kernel'}"]
    },
    "Installer.noCondaOrPipInstaller": "There is no Conda or Pip installer available in the selected environment.",
    "Installer.noPipInstaller": "There is no Pip installer available in the selected environment.",
    "Installer.searchForHelp": "Search for help",
    "Installer.couldNotInstallLibrary": "Could not install {0}. If pip is not available, please use the package manager of your choice to manually install this library into your Python environment.",
    "Installer.dataScienceInstallPrompt": "Data Science library {0} is not installed. Install?",
    "Products.installingModule": "Installing {0}",
    "DataScience.webNotSupported": "Operation not supported in web version of Jupyter Extension.",
    "DataScience.outputSizeExceedLimit": "Output exceeds the <a href={0}>size limit</a>. Open the full output data <a href={1}>in a text editor</a>",
    "DataScience.installPythonTitle": "Install Python",
    "DataScience.installPythonExtensionViaKernelPickerTitle": "Install Python Extension",
    "DataScience.switchToLocalKernelsTitle": "Connect to Local Kernels",
    "DataScience.switchToRemoteKernelsTitle": "Connect to a Jupyter Server",
    "DataScience.switchToAnotherRemoteKernelsTitle": "Connect to Another Jupyter Server",
    "DataScience.failedToInstallPythonExtension": "Failed to install the Python Extension.",
    "DataScience.kernelPrefixForRemote": "(Remote)",
    "DataScience.pythonFileOverridesPythonPackage": "This file could potentially override an existing Python package and interfere with kernel execution, consider renaming it.",
    "DataScience.alwaysIgnoreWarningsAboutOverridingPythonPackages": "Always ignore warnings about overriding Python packages",
    "DataScience.ignoreWarningAboutOverridingPythonPackage": "Ignore warning for '{0}'",
    "DataScience.moreInfoAboutFileNamesOverridingPythonPackages": "More information on overriding Python packages",
    "DataScience.reservedPythonFileNamesDiagnosticCollectionName": "Reserved Python Filenames",
    "DataScience.filesPossiblyOverridingPythonModulesMayHavePreventedKernelFromStarting": "Some of the following files found in the working directory may have prevented the Kernel from starting. Consider renaming them.",
    "DataScience.listOfFilesWithLinksThatMightNeedToBeRenamed": "File(s): {0} might need to be renamed.",
    "jupyter.configuration.jupyter.diagnostics.reservedPythonNames.enabled.markdownDescription": "Whether to show warnings about Python file names that could potentially [override Python packages](https://aka.ms/JupyterKernelStartFailureOverrideReservedName).",
    "jupyter.configuration.jupyter.diagnostics.reservedPythonNames.exclude.markdownDescription": "Configure [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) for excluding files and folders from from being warned about [overriding Python packages](https://aka.ms/JupyterKernelStartFailureOverrideReservedName)."
}
