// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.


// This is an autogenerated file, do not modify this manually.
// __GDPR__COMMON__ "duration" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": true, "comment": "Time taken to perform an operation. Total time taken to list interpreters. Total time taken to list interpreters. Total time taken to list kernels. Time taken. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events. Duration of a measure in milliseconds. Common measurement used across a number of events.Duration of a measure in milliseconds. Common measurement used across a number of events." }
// __GDPR__COMMON__ "failed" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Whether there was a failure. Whether there was a failure. Whether there was a failure. Whether there was a failure. Whether there was a failure. Whether there was a failure. Whether there was a failure. Whether there was a failure. Whether there was a failure. Whether there was a failure.Whether there was a failure." }
// __GDPR__COMMON__ "failureCategory" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error. A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error.A reason that we generate (e.g. kerneldied, noipykernel, etc), more like a category of the error." }
// __GDPR__COMMON__ "failureSubCategory" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Name of the method in the extension that threw the exception. Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly. Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly.Further sub classification of the error. E.g. kernel died due to the fact that zmq is not installed properly." }
// __GDPR__COMMON__ "pythonErrorFile" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Hash of the file name that contains the file in the last frame (from Python stack trace). Hash of the file name that contains the file in the last frame (from Python stack trace). Hash of the file name that contains the file in the last frame (from Python stack trace). Hash of the file name that contains the file in the last frame (from Python stack trace). Hash of the file name that contains the file in the last frame (from Python stack trace). Hash of the file name that contains the file in the last frame (from Python stack trace). Hash of the file name that contains the file in the last frame (from Python stack trace). Hash of the file name that contains the file in the last frame (from Python stack trace). Hash of the file name that contains the file in the last frame (from Python stack trace). Hash of the file name that contains the file in the last frame (from Python stack trace).Hash of the file name that contains the file in the last frame (from Python stack trace)." }
// __GDPR__COMMON__ "pythonErrorFolder" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Hash of the folder that contains the file in the last frame (from Python stack trace). Hash of the folder that contains the file in the last frame (from Python stack trace). Hash of the folder that contains the file in the last frame (from Python stack trace). Hash of the folder that contains the file in the last frame (from Python stack trace). Hash of the folder that contains the file in the last frame (from Python stack trace). Hash of the folder that contains the file in the last frame (from Python stack trace). Hash of the folder that contains the file in the last frame (from Python stack trace). Hash of the folder that contains the file in the last frame (from Python stack trace). Hash of the folder that contains the file in the last frame (from Python stack trace). Hash of the folder that contains the file in the last frame (from Python stack trace).Hash of the folder that contains the file in the last frame (from Python stack trace)." }
// __GDPR__COMMON__ "pythonErrorPackage" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Hash of the module that contains the file in the last frame (from Python stack trace). Hash of the module that contains the file in the last frame (from Python stack trace). Hash of the module that contains the file in the last frame (from Python stack trace). Hash of the module that contains the file in the last frame (from Python stack trace). Hash of the module that contains the file in the last frame (from Python stack trace). Hash of the module that contains the file in the last frame (from Python stack trace). Hash of the module that contains the file in the last frame (from Python stack trace). Hash of the module that contains the file in the last frame (from Python stack trace). Hash of the module that contains the file in the last frame (from Python stack trace). Hash of the module that contains the file in the last frame (from Python stack trace).Hash of the module that contains the file in the last frame (from Python stack trace)." }
// __GDPR__COMMON__ "stackTrace" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Node stacktrace without PII. Node stacktrace without PII. Node stacktrace without PII. Node stacktrace without PII. Node stacktrace without PII. Node stacktrace without PII. Node stacktrace without PII. Node stacktrace without PII. Node stacktrace without PII. Node stacktrace without PII.Node stacktrace without PII." }
// __GDPR__COMMON__ "actionSource" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party. Whether this was started by Jupyter extension or a 3rd party.Whether this was started by Jupyter extension or a 3rd party." }
// __GDPR__COMMON__ "disableUI" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel). Whether the notebook startup UI (progress indicator & the like) was displayed to the user or not. If its not displayed, then its considered an auto start (start in the background, like pre-warming kernel)" }
// __GDPR__COMMON__ "interruptCount" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": true, "comment": "This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel. This number gets reset after we attempt a restart or change kernel.This number gets reset after we attempt a restart or change kernel." }
// __GDPR__COMMON__ "userExecutedCell" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell. Whether the user executed a cell.Whether the user executed a cell." }
// __GDPR__COMMON__ "switchKernelCount" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": true, "comment": "Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed. Number of times the kernel was changed.Number of times the kernel was changed." }
// __GDPR__COMMON__ "startFailureCount" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": true, "comment": "Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed. Number of times starting the kernel failed.Number of times starting the kernel failed." }
// __GDPR__COMMON__ "restartCount" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": true, "comment": "This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel. This number gets reset after change the kernel.This number gets reset after change the kernel." }
// __GDPR__COMMON__ "resourceHash" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Hash of the Notebook or Interactive Window URI. Used to check whether a particular notebook fails across time or not.             This is also used to map different telemetry events related to this same resource. E.g. we could have an event sent for starting a notebook with this hash,             and then later we get yet another event indicating starting a notebook failed. And another event indicating the Python environment used for this notebook is a conda environment or             we have some other event indicating some other piece of data for this resource. With the information across multiple resources we can now join the different data points             and have a better understanding of what is going on, e.g. why something failed. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same. Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same.Hash of the resource (notebook.uri or pythonfile.uri associated with this). If we run the same notebook tomorrow, the hash will be the same." }
// __GDPR__COMMON__ "pythonEnvironmentVersion" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date). Found plenty of issues when starting Conda Python 3.7, Python 3.7 Python 3.9 (in early days when ipykernel was not up to date)" }
// __GDPR__COMMON__ "pythonEnvironmentType" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info. Found plenty of issues when starting kernels with conda, hence useful to capture this info.Found plenty of issues when starting kernels with conda, hence useful to capture this info." }
// __GDPR__COMMON__ "pythonEnvironmentPath" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash). A key, so that rest of the information is tied to this. (hash)" }
// __GDPR__COMMON__ "pythonEnvironmentPackages" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions. Comma delimited list of hashed packages & their versions.Comma delimited list of hashed packages & their versions." }
// __GDPR__COMMON__ "pythonEnvironmentCount" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": true, "comment": "Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments. Total number of python environments.Total number of python environments." }
// __GDPR__COMMON__ "kernelSpecCount" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": true, "comment": "Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list. Total number of kernel specs in the kernel spec list.Total number of kernel specs in the kernel spec list." }
// __GDPR__COMMON__ "kernelSessionId" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time. Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time.Unique identifier for an instance of a notebook session. If we restart or run this notebook tomorrow, this id will be different. Id could be something as simple as a hash of the current Epoch time." }
// __GDPR__COMMON__ "kernelLiveCount" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": true, "comment": "Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list. Total number of live kernels in the kernel spec list.Total number of live kernels in the kernel spec list." }
// __GDPR__COMMON__ "kernelLanguage" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection. Language of the kernel connection.Language of the kernel connection." }
// __GDPR__COMMON__ "kernelInterpreterCount" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": true, "comment": "Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list. Total number of interpreters in the kernel spec list.Total number of interpreters in the kernel spec list." }
// __GDPR__COMMON__ "kernelId" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id. Hash of the Kernel Connection id.Hash of the Kernel Connection id." }
// __GDPR__COMMON__ "kernelConnectionType" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc. Whether kernel was started using kernel spec, interpreter, etc.Whether kernel was started using kernel spec, interpreter, etc." }
// __GDPR__COMMON__ "isUsingActiveInterpreter" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not. Whether this resource is using the active Python interpreter or not.Whether this resource is using the active Python interpreter or not." }
// __GDPR__COMMON__ "capturedEnvVars" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work. Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work.Whether we managed to capture the environment variables or not. In the case of conda environments, `false` would be an error condition, as we must have env variables for conda to work." }
// __GDPR__COMMON__ "resourceType" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": false, "comment": "Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window. Used to determine whether this event is related to a Notebooks or Interactive window.Used to determine whether this event is related to a Notebooks or Interactive window." }


/* __GDPR__
   "DATASCIENCE.ADD_CELL_BELOW" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.CLICKED_EXPORT_NOTEBOOK_AS_QUICK_PICK" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.CREATE_NEW_INTERACTIVE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.DATA_VIEWER_DATA_DIMENSIONALITY" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.DATA_VIEWER_SLICE_ENABLEMENT_STATE_CHANGED" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.DATA_VIEWER_SLICE_OPERATION" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.DEBUG_CONTINUE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.DEBUG_CURRENT_CELL" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.DEBUG_FILE_INTERACTIVE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.DEBUG_STEP_OVER" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.DEBUG_STOP" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.DEBUGGING.CLICKED_ON_SETUP" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.DEBUGGING.CLICKED_RUN_AND_DEBUG_CELL" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.DEBUGGING.CLICKED_RUNBYLINE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.DEBUGGING.CLOSED_MODAL" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.DEBUGGING.ENDED_SESSION" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.DEBUGGING.IPYKERNEL6_STATUS" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.DEBUGGING.SUCCESSFULLY_STARTED_IW_JUPYTER" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.DEBUGGING.SUCCESSFULLY_STARTED_RUN_AND_DEBUG_CELL" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.DEBUGGING.SUCCESSFULLY_STARTED_RUNBYLINE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.DISABLE_INTERACTIVE_SHIFT_ENTER" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.ENABLE_INTERACTIVE_SHIFT_ENTER" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.ENTER_JUPYTER_URI" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.EXECUTE_CELL" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.EXPORT_NOTEBOOK_AS" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.EXPORT_NOTEBOOK_AS_COMMAND" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.EXPORT_NOTEBOOK_AS_FAILED" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.EXPORT_PYTHON_FILE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.EXPORT_PYTHON_FILE_AND_OUTPUT" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.FAILED_SHOW_DATA_EXPLORER" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.FAILED_TO_CREATE_CONTROLLER" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.FETCH_CONTROLLERS" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.GET_PASSWORD_ATTEMPT" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.GOTO_NEXT_CELL_IN_FILE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.GOTO_PREV_CELL_IN_FILE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.IMPORT_NOTEBOOK" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.INTERACTIVE_WINDOW_DEBUG_SETUP_CODE_FAILURE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.INTERRUPT" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.JUPYTER_KERNEL_API_ACCESS" : {
     "extensionId": {"classification":"PublicNonPersonalData","purpose":"PublicNonPersonalData","comment":"","owner":"donjayamanne"},
     "allowed": {"classification":"PublicNonPersonalData","purpose":"PublicNonPersonalData","comment":"","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DATASCIENCE.JUPYTER_KERNEL_API_USAGE" : {
     "extensionId": {"classification":"PublicNonPersonalData","purpose":"PublicNonPersonalData","comment":"","owner":"donjayamanne"},
     "pemUsed": {"classification":"PublicNonPersonalData","purpose":"PublicNonPersonalData","comment":"","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DATASCIENCE.JUPYTER_KERNEL_FILTER_USED" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.JUPYTER_KERNEL_HIDDEN_VIA_FILTER" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.JUPYTER_NOT_INSTALLED_ERROR_SHOWN" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.KERNEL_CRASH" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.KERNEL_SPEC_LANGUAGE" : {
     "kind": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether this is a local or remote kernel.","owner":"donjayamanne"},
     "language": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Language of the kernelSpec.","owner":"donjayamanne"},
     "usesShell": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether shell is used to start the kernel. E.g. `\"/bin/sh\"` is used in the argv of the kernelSpec. OCaml is one such kernel.","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DATASCIENCE.KERNEL_STARTUP_CODE_FAILURE" : {
     "ename": {"classification":"CallstackOrException","purpose":"CallstackOrException","comment":"","owner":"donjayamanne"},
     "evalue": {"classification":"CallstackOrException","purpose":"CallstackOrException","comment":"","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DATASCIENCE.NATIVE.CREATE_NEW_NOTEBOOK" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.NATIVE.OPEN_NOTEBOOK_ALL" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.NO_ACTIVE_KERNEL_SESSION" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.NOTEBOOK_INTERRUPT" : {
     "result": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"The result of the interrupt,","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DATASCIENCE.NOTEBOOK_LANGUAGE" : {
     "language": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Language found in the notebook if a known language. Otherwise 'unknown'","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DATASCIENCE.NOTEBOOK_RESTART" : {
     "startTimeOnly": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"If true, this is the total time taken to restart the kernel (excluding times to stop current cells and the like). Also in the case of raw kernels, we keep a separate process running, and when restarting we just switch to that process. In such cases this value will be `undefined`. In the case of raw kernels this will be true only when starting a new kernel process from scratch.","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DATASCIENCE.NOTEBOOK_START" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.OPEN_PLOT_VIEWER" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.PYTHON_VARIABLE_FETCHING_CODE_FAILURE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RECOMMENT_EXTENSION" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.REFRESH_DATA_VIEWER" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RESTART_KERNEL_COMMAND" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_ALL_CELLS" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_ALL_CELLS_ABOVE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_BY_LINE_VARIABLE_HOVER" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_CELL_AND_ALL_BELOW" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_CHANGE_CELL_TO_CODE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_CHANGE_CELL_TO_MARKDOWN" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_CURRENT_CELL" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_CURRENT_CELL_AND_ADD_BELOW" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_CURRENT_CELL_AND_ADVANCE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_DELETE_CELLS" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_EXTEND_SELECTION_BY_CELL_ABOVE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_EXTEND_SELECTION_BY_CELL_BELOW" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_FILE_INTERACTIVE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_FROM_LINE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_INSERT_CELL_ABOVE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_INSERT_CELL_BELOW" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_INSERT_CELL_BELOW_POSITION" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_MOVE_CELLS_DOWN" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_MOVE_CELLS_UP" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_SELECT_CELL" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_SELECT_CELL_CONTENTS" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_SELECTION_OR_LINE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.RUN_TO_LINE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.SELECT_JUPYTER_INTERPRETER_Command" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.SELECT_JUPYTER_URI" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.SELECT_LOCAL_JUPYTER_KERNEL" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.SELECT_REMOTE_JUPYTER_KERNEL" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.SELFCERTSMESSAGECLOSE" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.SELFCERTSMESSAGEENABLED" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.SET_JUPYTER_URI_LOCAL" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.SET_JUPYTER_URI_UI_DISPLAYED" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.SET_JUPYTER_URI_USER_SPECIFIED" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.SHOW_DATA_EXPLORER" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.START_SHOW_DATA_EXPLORER" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.USER_DID_NOT_INSTALL_JUPYTER" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.USER_DID_NOT_INSTALL_PANDAS" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.USER_INSTALLED_JUPYTER" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.USER_INSTALLED_PANDAS" : {
   }
 */


/* __GDPR__
   "DATASCIENCE.USER_STARTUP_CODE_FAILURE" : {
     "ename": {"classification":"CallstackOrException","purpose":"CallstackOrException","comment":"","owner":"donjayamanne"},
     "evalue": {"classification":"CallstackOrException","purpose":"CallstackOrException","comment":"","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DATAVIEWER.USING_INTERPRETER" : {
   }
 */


/* __GDPR__
   "DATAVIEWER.USING_KERNEL" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.ACTIVE_INTERPRETER_LISTING_PERF" : {
     "firstTime": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether this is the first time in the session. (fetching kernels first time in the session is slower, later its cached). This is a generic property supported for all telemetry (sent by decorators).","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.CODE_LENS_ACQ_TIME" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.COMMAND_EXECUTED" : {
     "command": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Name of the command executed.","owner":"unknown"}   }
 */


/* __GDPR__
   "DS_INTERNAL.CONNECTFAILEDJUPYTER" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.CONNECTLOCALJUPYTER" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.CONNECTREMOTEEXPIREDCERTFAILEDJUPYTER" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.CONNECTREMOTEFAILEDJUPYTER" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.CONNECTREMOTEJUPYTER" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.CONNECTREMOTEJUPYTER_VIA_LOCALHOST" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.CONNECTREMOTESELFCERTFAILEDJUPYTER" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.ERROR_START_RAWKERNEL_WITHOUT_INTERPRETER" : {
     "pythonExtensionInstalled": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Indicates whether the python extension is installed. If we send telemetry fro this & this is `true`, then we have a bug. If its `false`, then we can ignore this telemetry.","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.EXECUTE_CELL_PERCEIVED_COLD" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.EXECUTE_CELL_PERCEIVED_WARM" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.FAILED_TO_UPDATE_JUPYTER_KERNEL_SPEC" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.GET_ACTIVATED_ENV_VARIABLES" : {
     "envType": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Type of the Python environment.","owner":"donjayamanne"},
     "pythonEnvType": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Duplicate of `envType`, the property `envType` doesn't seem to be coming through. If we can get `envType`, then we'll deprecate this new property. Else we just deprecate & remote the old property.","owner":"donjayamanne"},
     "reason": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Reason for not being able to get the env variables.","owner":"donjayamanne"},
     "source": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Source where the env variables were fetched from. If `python`, then env variables were fetched from Python extension. If `jupyter`, then env variables were fetched from Jupyter extension.","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.GET_PASSWORD_FAILURE" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.GET_PASSWORD_SUCCESS" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.HASHED_OUTPUT_MIME_TYPE" : {
     "hasGeo": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether the mime type has the word 'geo' in it.","owner":"donjayamanne"},
     "hashedName": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Hash of the cell output mimetype","owner":"donjayamanne"},
     "hasHtml": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether the mime type has the word 'html' in it.","owner":"donjayamanne"},
     "hasImage": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether the mime type has the word 'image' in it.","owner":"donjayamanne"},
     "hasJson": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether the mime type has the word 'json' in it.","owner":"donjayamanne"},
     "hasLatex": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether the mime type has the word 'latex' in it.","owner":"donjayamanne"},
     "hasJupyter": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether the mime type has the word 'jupyter' in it.","owner":"donjayamanne"},
     "hasPlotly": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether the mime type has the word 'plotly' in it.","owner":"donjayamanne"},
     "hasSvg": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether the mime type has the word 'svg' in it.","owner":"donjayamanne"},
     "hasText": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether the mime type has the word 'text' in it.","owner":"donjayamanne"},
     "hasVega": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether the mime type has the word 'vega' in it.","owner":"donjayamanne"},
     "hasVnd": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether the mime type has the word 'vnd' in it.","owner":"donjayamanne"},
     "hasWidget": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether the mime type has the word 'widget' in it.","owner":"donjayamanne"},
     "hasXml": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether the mime type has the word 'xml' in it.","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.INTERACTIVE_FILE_TOOLTIPS_PERF" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.INTERPRETER_LISTING_PERF" : {
     "firstTime": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether this is the first time in the session. (fetching kernels first time in the session is slower, later its cached). This is a generic property supported for all telemetry (sent by decorators).","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.INTERRUPT_JUPYTER_TIME" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.INVALID_KERNEL_USED" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.IPYWIDGET_DISCOVER_WIDGETS_NB_EXTENSIONS" : {
     "type": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether we're looking for widgets on local Jupyter environment (local connections) or remote.","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.IPYWIDGET_DISCOVERED" : {
     "hashedName": {"classification":"PublicNonPersonalData","purpose":"PublicNonPersonalData","comment":"Hash of the widget","owner":"donjayamanne"},
     "source": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Where did we find the hashed name (CDN or user environment or remote jupyter).","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.IPYWIDGET_DISCOVERY_ERRORED" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.IPYWIDGET_EXTENSIONJS_INFO" : {
     "failure": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"","owner":"donjayamanne"},
     "patternUsedToRegisterRequireConfig": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Pattern (code style) used to register require.config enties. Pattern (code style) used to register require.config enties.","owner":"donjayamanne"},
     "widgetFolderNameHash": {"classification":"PublicNonPersonalData","purpose":"PublicNonPersonalData","comment":"Hash of the widget folder name. Hash of the widget folder name.","owner":"donjayamanne"},
     "requireEntryPointCount": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Total number of entries in the require config.","owner":"donjayamanne","isMeasurement":true}   }
 */


/* __GDPR__
   "DS_INTERNAL.IPYWIDGET_LOAD_FAILURE" : {
     "timedout": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"","owner":"donjayamanne"},
     "isOnline": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"","owner":"donjayamanne"},
     "moduleHash": {"classification":"PublicNonPersonalData","purpose":"PublicNonPersonalData","comment":"","owner":"donjayamanne"},
     "moduleVersion": {"classification":"PublicNonPersonalData","purpose":"PublicNonPersonalData","comment":"","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.IPYWIDGET_LOAD_SUCCESS" : {
     "moduleHash": {"classification":"PublicNonPersonalData","purpose":"PublicNonPersonalData","comment":"","owner":"donjayamanne"},
     "moduleVersion": {"classification":"PublicNonPersonalData","purpose":"PublicNonPersonalData","comment":"","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.IPYWIDGET_OVERHEAD" : {
     "totalOverheadInMs": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"","owner":"donjayamanne","isMeasurement":true},
     "numberOfMessagesWaitedOn": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"","owner":"donjayamanne","isMeasurement":true},
     "averageWaitTime": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"","owner":"donjayamanne","isMeasurement":true},
     "numberOfRegisteredHooks": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"","owner":"donjayamanne","isMeasurement":true}   }
 */


/* __GDPR__
   "DS_INTERNAL.IPYWIDGET_PROMPT_TO_USE_CDN" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.IPYWIDGET_PROMPT_TO_USE_CDN_SELECTION" : {
     "selection": {"classification":"PublicNonPersonalData","purpose":"PublicNonPersonalData","comment":"","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.IPYWIDGET_RENDER_FAILURE" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.IPYWIDGET_TIME_TO_COPY_NBEXTENSIONS_DIR" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.IPYWIDGET_UNHANDLED_MESSAGE" : {
     "msg_type": {"classification":"PublicNonPersonalData","purpose":"PublicNonPersonalData","comment":"","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.IPYWIDGET_USED_BY_USER" : {
     "cdnSearched": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether we searched CDN or not.","owner":"donjayamanne"},
     "hashedName": {"classification":"PublicNonPersonalData","purpose":"PublicNonPersonalData","comment":"Hash of the widget","owner":"donjayamanne"},
     "source": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Where did we find the hashed name (CDN or user environment or remote jupyter).","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.IPYWIDGET_WIDGET_VERSION_NOT_SUPPORTED_LOAD_FAILURE" : {
     "moduleHash": {"classification":"PublicNonPersonalData","purpose":"PublicNonPersonalData","comment":"","owner":"donjayamanne"},
     "moduleVersion": {"classification":"PublicNonPersonalData","purpose":"PublicNonPersonalData","comment":"","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.JUPYTER_CREATING_NOTEBOOK" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.JUPYTER_CUSTOM_COMMAND_LINE" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.JUPYTER_IDLE_TIMEOUT" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.JUPYTER_INTALLED_BUT_NO_KERNELSPEC_MODULE" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.JUPYTER_REGISTER_INTERPRETER_AS_KERNEL" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.JUPYTERSTARTUPCOST" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.KERNEL_COUNT" : {
     "condaEnvsSharingSameInterpreter": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Total number of conda environments that share the same interpreter This happens when we create conda envs without the `python` argument. Such conda envs don't work today in the extension. Hence users with such environments could hvae issues with starting kernels or packages not getting loaded correctly or at all.","owner":"donjayamanne","isMeasurement":true}   }
 */


/* __GDPR__
   "DS_INTERNAL.KERNEL_LAUNCHER_PERF" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.KERNEL_LISTING_PERF" : {
     "firstTime": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether this is the first time in the session. (fetching kernels first time in the session is slower, later its cached). This is a generic property supported for all telemetry (sent by decorators).","owner":"donjayamanne"},
     "kind": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether this telemetry is for listing of all kernels or just python or just non-python. (fetching kernels first time in the session is slower, later its cached).","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.KERNEL_PROVIDER_PERF" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.KERNEL_SPEC_NOT_FOUND" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.LOCAL_KERNEL_SPEC_COUNT" : {
     "count": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Number of kernel specs found on disc.","owner":"donjayamanne","isMeasurement":true}   }
 */


/* __GDPR__
   "DS_INTERNAL.NATIVE_VARIABLE_VIEW_LOADED" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.NATIVE_VARIABLE_VIEW_MADE_VISIBLE" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.NATIVE.NOTEBOOK_OPEN_COUNT" : {
     "count": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"","owner":"donjayamanne","isMeasurement":true}   }
 */


/* __GDPR__
   "DS_INTERNAL.NATIVE.NOTEBOOK_RUN_COUNT" : {
     "count": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"","owner":"donjayamanne","isMeasurement":true}   }
 */


/* __GDPR__
   "DS_INTERNAL.NEW_FILE_USED_IN_INTERACTIVE" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.NUMBER_OF_REMOTE_KERNEL_IDS_SAVED" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.PERCEIVED_JUPYTER_STARTUP_NOTEBOOK" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.PREFERRED_KERNEL" : {
     "hasActiveInterpreter": {"comment":"","owner":"IanMatthewHuff"},
     "language": {"comment":"","owner":"IanMatthewHuff"},
     "result": {"comment":"","owner":"IanMatthewHuff"}   }
 */


/* __GDPR__
   "DS_INTERNAL.PREFERRED_KERNEL_EXACT_MATCH" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.PYTHON_EXTENSION_INSTALLED_VIA_KERNEL_PICKER" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.PYTHON_EXTENSION_NOT_INSTALLED" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.PYTHON_KERNEL_EXECUTABLE_MATCHES" : {
     "match": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether we've managed to correctly identify the Python Environment.","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.PYTHON_MODULE_INSTALL" : {
     "action": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"","owner":"donjayamanne"},
     "isModulePresent": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether the module was already (once before) installed into the python environment or whether this already exists (detected via `pip list`)","owner":"donjayamanne"},
     "moduleName": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"","owner":"donjayamanne"},
     "pythonEnvType": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.PYTHON_NOT_INSTALLED" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.RANK_KERNELS_PERF" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.RAWKERNEL_CREATING_NOTEBOOK" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.RAWKERNEL_INFO_RESPONSE" : {
     "timedout": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether we timedout while waiting for response for Kernel info request.","owner":"donjayamanne"},
     "attempts": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Total number of attempts and sending a request and waiting for response.","owner":"donjayamanne","isMeasurement":true}   }
 */


/* __GDPR__
   "DS_INTERNAL.RAWKERNEL_PROCESS_LAUNCH" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.RAWKERNEL_SESSION_CONNECT" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.RAWKERNEL_SESSION_DISPOSED" : {
     "stacktrace": {"classification":"CallstackOrException","purpose":"CallstackOrException","comment":"This is the callstack at the time that the `dispose` method is called, intended for us to be able to identify who called `dispose` on the RawSession.","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.RAWKERNEL_SESSION_KERNEL_PROCESS_EXITED" : {
     "exitReason": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"The kernel process's exit reason, based on the error object's reason","owner":"donjayamanne"},
     "exitCode": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"The kernel process's exit code.","owner":"donjayamanne","isMeasurement":true}   }
 */


/* __GDPR__
   "DS_INTERNAL.RAWKERNEL_SESSION_NO_IPYKERNEL" : {
     "reason": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"","owner":"donjayamanne","isMeasurement":true}   }
 */


/* __GDPR__
   "DS_INTERNAL.RAWKERNEL_SESSION_SHUTDOWN" : {
     "isRequestToShutdownRestartSession": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"This indicates whether the session being shutdown is a restart session.","owner":"donjayamanne"},
     "stacktrace": {"classification":"CallstackOrException","purpose":"CallstackOrException","comment":"This is the callstack at the time that the `shutdownSession` method is called, intended for us to be ale to identify who tried to shutdown the session.","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.RAWKERNEL_SESSION_START" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.RAWKERNEL_SESSION_START_EXCEPTION" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.RAWKERNEL_SESSION_START_SUCCESS" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.RAWKERNEL_SESSION_START_USER_CANCEL" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.RAWKERNEL_START_RAW_SESSION" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.REGISTER_AND_USE_INTERPRETER_AS_KERNEL" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.REMOTE_KERNEL_SPEC_COUNT" : {
     "count": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Number of remote kernel specs.","owner":"donjayamanne","isMeasurement":true}   }
 */


/* __GDPR__
   "DS_INTERNAL.RESTART_JUPYTER_TIME" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.RESTART_KERNEL" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.RUNTEST" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.SELECT_JUPYTER_INTERPRETER" : {
     "result": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"The result of the selection. notSelected - No interpreter was selected. selected - An interpreter was selected (and configured to have jupyter and notebook). installationCancelled - Installation of jupyter and/or notebook was cancelled for an interpreter.","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.SELECT_JUPYTER_INTERPRETER_MESSAGE_DISPLAYED" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.SHIFTENTER_BANNER_SHOWN" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.SHOW_DATA_NO_PANDAS" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.SHOW_DATA_PANDAS_INSTALL_CANCELED" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.SHOW_DATA_PANDAS_OK" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.SHOW_DATA_PANDAS_TOO_OLD" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.START_EXECUTE_NOTEBOOK_CELL_PERCEIVED_COLD" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.START_JUPYTER_PROCESS" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.START_SESSION_FAILED_JUPYTER" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.SWITCH_KERNEL" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.SWITCH_TO_EXISTING_KERNEL" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.SWITCH_TO_INTERPRETER_AS_KERNEL" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.VARIABLE_EXPLORER_FETCH_TIME" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.VARIABLE_EXPLORER_VARIABLE_COUNT" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.VSCNOTEBOOK_CELL_TRANSLATION_FAILED" : {
     "isErrorOutput": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "DS_INTERNAL.WAIT_FOR_IDLE_JUPYTER" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.WEB_FETCH_ERROR" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.WEBVIEW_STARTUP" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.ZMQ_NATIVE_BINARIES_LOADING" : {
   }
 */


/* __GDPR__
   "DS_INTERNAL.ZMQ_NATIVE_BINARIES_NOT_LOADING" : {
   }
 */


/* __GDPR__
   "ENVFILE_VARIABLE_SUBSTITUTION" : {
   }
 */


/* __GDPR__
   "ENVFILE_WORKSPACE" : {
     "hasCustomEnvPath": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"If there's a custom path specified in the python.envFile workspace settings.","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "ERROR" : {
   }
 */


/* __GDPR__
   "EXTENSION.LOAD" : {
     "codeLoadingTime": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Time taken to load the code.","owner":"donjayamanne","isMeasurement":true},
     "totalActivateTime": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Time taken to activate the extension.","owner":"donjayamanne","isMeasurement":true},
     "workspaceFolderCount": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Number of workspace folders opened","owner":"donjayamanne","isMeasurement":true},
     "endActivateTime": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Time when activation completed.","owner":"donjayamanne","isMeasurement":true},
     "startActivateTime": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Time when activation started.","owner":"donjayamanne","isMeasurement":true}   }
 */


/* __GDPR__
   "HASHED_PACKAGE_NAME" : {
     "hashedNamev2": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Hash of the package name. Hash of the package name","owner":"unknown"}   }
 */


/* __GDPR__
   "HASHED_PACKAGE_PERF" : {
   }
 */


/* __GDPR__
   "JUPYTER_EXPERIMENTS_OPT_IN_OUT" : {
     "expNameOptedInto": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Carries the name of the experiment user has been opted into manually","owner":"unknown"},
     "expNameOptedOutOf": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Carries the name of the experiment user has been opted out of manually","owner":"unknown"}   }
 */


/* __GDPR__
   "JUPYTER_IS_INSTALLED" : {
     "detection": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Jupyter is in current path of process owned by VS Code. I.e. jupyter can be found in the path as defined by the env variable process.env['PATH'].","owner":"donjayamanne"},
     "frontEnd": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"","owner":"donjayamanne"},
     "reason": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"","owner":"donjayamanne"},
     "frontEndVersion": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Version of the form 6.11, 4.8","owner":"donjayamanne","isMeasurement":true}   }
 */


/* __GDPR__
   "OPEN_DATAVIEWER_FROM_VARIABLE_WINDOW_ERROR_EX" : {
   }
 */


/* __GDPR__
   "OPEN_DATAVIEWER_FROM_VARIABLE_WINDOW_REQUEST_EX" : {
   }
 */


/* __GDPR__
   "OPEN_DATAVIEWER_FROM_VARIABLE_WINDOW_SUCCESS_EX" : {
   }
 */


/* __GDPR__
   "PYTHON_INTERPRETER_ACTIVATION_ENVIRONMENT_VARIABLES" : {
     "activatedByWrapper": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether the environment was activated by the wrapper class. If `true`, this telemetry is sent by the class that wraps the two activation providers   .","owner":"donjayamanne"},
     "activatedInTerminal": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Whether the environment was activated within a terminal or not.","owner":"donjayamanne"},
     "hasEnvVars": {"classification":"SystemMetaData","purpose":"SystemMetaData","comment":"Carries `true` if environment variables are present, `false` otherwise","owner":"donjayamanne"}   }
 */


/* __GDPR__
   "TERMINAL_ENV_VAR_EXTRACTION" : {
   }
 */


/* __GDPR__
   "TERMINAL_SHELL_IDENTIFICATION" : {
   }
 */


