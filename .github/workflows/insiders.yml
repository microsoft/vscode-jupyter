name: Insiders VSIX

on:
  push:
    branches:
      - main
      - rchiodo/test_from_json

  workflow_dispatch:

env:
  NODE_VERSION: 12.14.1
  PYTHON_VERSION: 3.8
  JULIA_VERSION: 1.5.2
  DOTNET_VERSION: '5.0'
  MOCHA_REPORTER_JUNIT: true # Use the mocha-multi-reporters and send output to both console (spec) and JUnit (mocha-junit-reporter). Also enables a reporter which exits the process running the tests if it haven't already.
  CACHE_NPM_DEPS: cache-npm
  CACHE_OUT_DIRECTORY: cache-out-directory
  CACHE_PIP_DEPS: cache-pip
  VSC_JUPYTER_FORCE_LOGGING: 'true'
  VSC_JUPYTER_CI_RUN_NON_PYTHON_NB_TEST: 'true'
  # Key for the cache created at the end of the the 'Cache ./pythonFiles/lib/python' step.
  CACHE_PYTHONFILES: cache-pvsc-pythonFiles
  VSIX_NAME: ms-toolsai-jupyter-insiders.vsix
  COVERAGE_REPORTS: tests-coverage-reports
  TEST_RESULTS_DIRECTORY: .
  TEST_RESULTS_GLOB: '**/test-results*.xml'
  IPYWIDGET_SCREENSHOT_PATH: '*-screenshot.png'
  DISABLE_INSIDERS_EXTENSION: 1 # Disable prompts to install Insiders in tests (else it blocks activation of extension).
  VSC_JUPYTER_INSTRUMENT_CODE_FOR_COVERAGE: true

jobs:
  read-next-job:
    runs-on: ubuntu-latest
    name: read-job-contents
    if: github.repository == 'microsoft/vscode-jupyter'
    outputs:
      next-steps: ${{ steps.set-steps.outputs.next-steps }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Convert to json
        uses: fabasoad/yaml-json-xml-converter-action@main
        id: yamlToJson
        with: 
          path: './.github/workflows/jobs/test.yml'
          from: 'yaml'
          to: 'json'

      - name: Read json
        id: set-steps
        run: |
          content="${{ toJson(fromJson(steps.yamlToJson.outputs.data).jobs.build-vsix.steps) }}"
          echo "::set-output name=next-steps::$content"
  test-next-job:
    runs-on: ubuntu-latest
    needs: read-next-job
    name: run-job-contents
    if: github.repository == 'microsoft/vscode-jupyter'
    steps: 
      - name: Print json
        run: echo "${{ needs.read-next-job.outputs.next-steps }}"


