# CI build (PR merge)

name: '$(Year:yyyy).$(Month).0.$(BuildID)-ci'

# Notes: Only trigger a commit for main and release, and skip build/rebuild
#        on changes in the news and .vscode folders.
trigger:
  branches:
    include: ['main', 'release*']
  paths:
    exclude: ['/news/1 Enhancements', '/news/2 Fixes', '/news/3 Code Health', '/.vscode']

# Not the PR build for merges to main and release.
pr: none

# Variables that are available for the entire pipeline.
variables:
  - template: templates/globals.yml

stages:
  - stage: Build
    jobs:
      - template: templates/jobs/build_compile.yml

  # Each item in each matrix has a number of possible values it may
  # define.  They are detailed in templates/test_phases.yml.  The only
  # required value is "TestsToRun".

  - stage: Linux
    dependsOn: []
    jobs:
      - job: 'Py3x'
        dependsOn: []
        timeoutInMinutes: 120
        strategy:
          matrix:
            'Unit':
              # with mocks
              # focused on small units (i.e. functions)
              # and tightly controlled dependencies
              TestsToRun: 'testUnitTests, pythonIPythonTests'
              NeedsPythonTestReqs: true
              NeedsIPythonReqs: true
            'Functional':
              # no mocks, no vscode
              # focused on integration
              TestsToRun: 'testfunctional'
              NeedsPythonTestReqs: true
              NeedsPythonFunctionalReqs: true
            'Single Workspace':
              # no mocks, with vscode
              # focused on integration
              TestsToRun: 'testSingleWorkspace'
              NeedsPythonTestReqs: true
            'Debugger':
              TestsToRun: 'testDebugger'
              NeedsPythonTestReqs: true
            # 'Smoke':
            #   TestsToRun: 'testSmoke'
            #   NeedsPythonTestReqs: true
            #   NeedsIPythonReqs: true
          maxParallel: 2
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - template: templates/test_phases.yml


    #   # This is the oldest Python 3 version we support.
    #   - job: 'Py35'
    #     dependsOn: []
    #     timeoutInMinutes: 120
    #     strategy:
    #       matrix:
    #         'Unit':
    #           PythonVersion: '3.5'
    #           # Note: "pythonInternalTools" tests are 3.7+.
    #           TestsToRun: 'testUnitTests, pythonIPythonTests'
    #           NeedsPythonTestReqs: true
    #           NeedsIPythonReqs: true
    #         'Debugger':
    #           PythonVersion: '3.5'
    #           TestsToRun: 'testDebugger'
    #           NeedsPythonTestReqs: true
    #       maxParallel: 2
    #     pool:
    #       vmImage: 'ubuntu-16.04'
    #     steps:
    #       - template: templates/test_phases.yml
  #   - stage: Mac
  #     dependsOn: []
  #     jobs:
  #       - job: 'Py3x'
  #         dependsOn: []
  #         timeoutInMinutes: 120
  #         strategy:
  #           matrix:
  #             'Unit':
  #               TestsToRun: 'testUnitTests, pythonIPythonTests'
  #               NeedsPythonTestReqs: true
  #               NeedsIPythonReqs: true
  #             'Functional':
  #               TestsToRun: 'testfunctional'
  #               NeedsPythonTestReqs: true
  #               NeedsPythonFunctionalReqs: true
  #             'Single Workspace':
  #               TestsToRun: 'testSingleWorkspace'
  #               NeedsPythonTestReqs: true
  #             'Debugger':
  #               TestsToRun: 'testDebugger'
  #               NeedsPythonTestReqs: true
  #             'Smoke':
  #               TestsToRun: 'testSmoke'
  #               NeedsPythonTestReqs: true
  #               NeedsIPythonReqs: true
  #           maxParallel: 2
  #         pool:
  #           vmImage: '$(vmImageMacOS)'
  #         steps:
  #           - template: templates/test_phases.yml

  #   - stage: Windows
  #     dependsOn: []
  #     jobs:
  #       - job: 'Py3x'
  #         dependsOn: []
  #         timeoutInMinutes: 120
  #         strategy:
  #           matrix:
  #             'Unit':
  #               TestsToRun: 'testUnitTests, pythonIPythonTests'
  #               NeedsPythonTestReqs: true
  #               NeedsIPythonReqs: true
  #             'Functional':
  #               TestsToRun: 'testfunctional'
  #               NeedsPythonTestReqs: true
  #               NeedsPythonFunctionalReqs: true
  #             'Single Workspace':
  #               TestsToRun: 'testSingleWorkspace'
  #               NeedsPythonTestReqs: true
  #             'Debugger':
  #               TestsToRun: 'testDebugger'
  #               NeedsPythonTestReqs: true
  #             'Smoke':
  #               TestsToRun: 'testSmoke'
  #               NeedsPythonTestReqs: true
  #               NeedsIPythonReqs: true
  #           maxParallel: 2
  #         pool:
  #           vmImage: 'vs2017-win2016'
  #         steps:
  #           - template: templates/test_phases.yml

  - stage: Reports
    dependsOn:
      - Linux
    #   - Mac
    #   - Windows
    condition: always()
    jobs:
      - template: templates/jobs/coverage.yml
