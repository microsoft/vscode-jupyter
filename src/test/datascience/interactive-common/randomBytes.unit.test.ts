import { ISystemPseudoRandomNumberGenerator } from '../../../client/datascience/types';
import { assert } from 'chai';
import { SystemPseudoRandomNumberGenerator } from '../../../client/datascience/interactive-ipynb/randomBytes';
import { PlatformService } from '../../../client/common/platform/platformService';

suite('DataScience - RandomBytes', () => {
    let prng: ISystemPseudoRandomNumberGenerator;
    setup(() => {
        const platformService = new PlatformService();
        prng = new SystemPseudoRandomNumberGenerator(platformService);
    });

    test('Generate random bytes', async () => {
        const numRequestedBytes = 1024;
        const generatedBytes = await prng.randomBytes(numRequestedBytes);
        const numGeneratedBytes = generatedBytes.length;
        assert.ok(
            numGeneratedBytes === numRequestedBytes,
            `Expected to generate ${numRequestedBytes} random bytes but instead generated ${numGeneratedBytes} random bytes`
        );
        assert.ok(generatedBytes.filter((byte) => byte !== 0).length > 0, `Generated bytes are all null`);
    });
});
