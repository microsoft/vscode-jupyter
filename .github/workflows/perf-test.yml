# Temporary file to test out writing to a branch during a PR
name: Verify perf test

permissions:
  deployments: write

on:
  workflow_dispatch

jobs:
  perf-test:
    runs-on: ubuntu-latest
    # Eventually we can use a pool here to run this on custom hardware
    steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
        ref: ${{ github.event.pull_request.head.ref }}

    - id: determine_last_message
      name: Parse git log for last message
      shell: bash -l {0}
      run: |
        export LAST_COMMIT_MESSAGE=`git log --oneline -1 | sed -E 's/[a-z,A-Z,0-9]*?\s+(.*)/\1/g'`
        echo LAST_COMMIT_MESSAGE is "$LAST_COMMIT_MESSAGE"
        echo "::set-output name=message::$LAST_COMMIT_MESSAGE"

    - id: test_make_change
      name: Test if need to make changes
      shell: bash -l {0}
      run: | # Careful, bash is super picky about spacing for comparisons
        if [ "${{steps.determine_last_message.outputs.message}}" != "COMMIT_PERF_RESULTS" ]
        then
           echo "::set-output name=shouldMakeChange::1"
        else
           echo "::set-output name=shouldMakeChange::0"
        fi

    # This is the part that will run a test eventually
    - name: Create local changes
      if: (steps.test_make_change.outputs.shouldMakeChange == 1)
      uses: jsdaniell/create-json@v1.2.2
      with:
        name: 'perf-results.json'
        dir: './build/ci/performance'
        json: '{ "run_number": ${{ github.run_number }}, "head_ref": "${{github.head_ref}}", "results": {} }'

    # Submit the changes to the perf results. Make sure to use special commit message
    - name: Commit files
      if: (steps.test_make_change.outputs.shouldMakeChange == 1 && github.event_name != 'pull_request')
      run: |
        git config --local user.email "41898282+github-actions@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git commit -m "COMMIT_PERF_RESULTS" -a

    # Push the changes using a secret token
    - name: Push changes
      if: (steps.test_make_change.outputs.shouldMakeChange == 1 && github.event_name != 'pull_request')
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.PERF_UPLOAD_TOKEN }}
        branch: ${{ github.event.pull_request.head.ref }}
