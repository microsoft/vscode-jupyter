// A launch configuration that compiles the extension and then opens it inside a new window
{
    "version": "0.1.0",
    "configurations": [
        {
            "name": "Extension",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                "--extensionDevelopmentPath=${workspaceFolder}",
                "--enable-proposed-api"
            ],
            "stopOnEntry": false,
            "smartStep": true,
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/out/**/*",
                "!${workspaceFolder}/**/node_modules**/*"
            ],
            "preLaunchTask": "Compile",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "env": {
                // Enable this to turn on redux logging during debugging
                "XVSC_PYTHON_FORCE_LOGGING": "1",
                // Enable this to try out new experiments locally
                "VSC_PYTHON_LOAD_EXPERIMENTS_FROM_FILE": "1",
                // Enable this to log telemetry to the output during debugging
                "XVSC_PYTHON_LOG_TELEMETRY": "1",
                // Enable this to log debugger output. Directory must exist ahead of time
                "XDEBUGPY_LOG_DIR": "${workspaceRoot}/tmp/Debug_Output_Ex"
            }
        },
        {
            "name": "Extension (UI in Browser)",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                "--extensionDevelopmentPath=${workspaceFolder}"
            ],
            "stopOnEntry": false,
            "smartStep": true,
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/out/**/*",
                "!${workspaceFolder}/**/node_modules**/*"
            ],
            "preLaunchTask": "Inject DS WebBrowser UI",
            "env": {
                "VSC_PYTHON_DS_UI_PROMPT": "1"
            },
            "skipFiles": [
                "<node_internals>/**"
            ]
        },
        {
            "name": "Extension inside container",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                "--extensionDevelopmentPath=${workspaceFolder}",
                "${workspaceFolder}/data"
            ],
            "stopOnEntry": false,
            "smartStep": true,
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/out/**/*",
                "!${workspaceFolder}/**/node_modules**/*"
            ],
            "preLaunchTask": "Compile"
        },
        {
            "name": "Tests (Debugger, VS Code, *.test.ts)",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                "${workspaceFolder}/src/testMultiRootWkspc/multi.code-workspace",
                "--disable-extensions",
                "--extensionDevelopmentPath=${workspaceFolder}",
                "--extensionTestsPath=${workspaceFolder}/out/test"
            ],
            "stopOnEntry": false,
            "sourceMaps": true,
            "smartStep": true,
            "outFiles": [
                "${workspaceFolder}/out/**/*",
                "!${workspaceFolder}/**/node_modules**/*"
            ],
            "preLaunchTask": "Compile",
            "env": {
                "IS_CI_SERVER_TEST_DEBUGGER": "1"
            },
            "skipFiles": [
                "<node_internals>/**"
            ]
        },
        {
            // Note, for the smoke test you want to debug, you may need to copy the file,
            // rename it and remove a check for only smoke tests.
            "name": "Tests (Smoke, VS Code, *.test.ts)",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                "${workspaceFolder:vscode-jupyter}/src/testMultiRootWkspc/smokeTests",
                "--enable-proposed-api",
                "--extensionDevelopmentPath=${workspaceFolder:vscode-python}",
                "--extensionDevelopmentPath=${workspaceFolder:vscode-jupyter}",
                "--extensionTestsPath=${workspaceFolder:vscode-jupyter}/out/test"
            ],
            "env": {
                "CI_PYTHON_PATH": "<Python Path>",
                "VSC_PYTHON_SMOKE_TEST": "1",
                "VSC_JUPYTER_CI_TEST_GREP": "Smoke Test"
            },
            "stopOnEntry": false,
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder:vscode-python}/out/**/*.js",
                "!${workspaceFolder:vscode-python}/**/node_modules**/*",
                "${workspaceFolder:vscode-jupyter}/out/**/*.js",
                "!${workspaceFolder:vscode-jupyter}/**/node_modules**/*"
            ],
            "preLaunchTask": "Compile",
            "skipFiles": [
                "<node_internals>/**"
            ]
        },
        {
            "name": "Tests (Single Workspace, VS Code, *.test.ts)",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                "${workspaceFolder:vscode-jupyter}/src/test",
                "--disable-extensions",
                "--enable-proposed-api",
                "--extensionDevelopmentPath=${workspaceFolder:vscode-python}",
                "--extensionDevelopmentPath=${workspaceFolder:vscode-jupyter}",
                "--extensionTestsPath=${workspaceFolder:vscode-jupyter}/out/test"
            ],
            "env": {
                "VSC_JUPYTER_CI_TEST_GREP": "" // Modify this to run a subset of the single workspace tests
            },
            "stopOnEntry": false,
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder:vscode-python}/out/**/*.js",
                "!${workspaceFolder:vscode-python}/**/node_modules**/*",
                "${workspaceFolder:vscode-jupyter}/out/**/*.js",
                "!${workspaceFolder:vscode-jupyter}/**/node_modules**/*"
            ],
            "preLaunchTask": "Compile",
            "skipFiles": [
                "<node_internals>/**"
            ]
        },
        {
            "name": "Jedi LSP tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                "${workspaceFolder}/src/test",
                "--disable-extensions",
                "--extensionDevelopmentPath=${workspaceFolder}",
                "--extensionTestsPath=${workspaceFolder}/out/test"
            ],
            "env": {
                "VSC_JUPYTER_CI_TEST_GREP": "Language Server:"
            },
            "stopOnEntry": false,
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/out/**/*.js",
                "!${workspaceFolder}/**/node_modules**/*"
            ],
            "preLaunchTask": "preTestJediLSP",
            "skipFiles": [
                "<node_internals>/**"
            ]
        },
        {
            "name": "Tests (Notebook, *.ds.test.ts)",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                "${workspaceFolder:vscode-jupyter}/src/test/datascience",
                "--disable-extensions",
                "--enable-proposed-api",
                "--extensionDevelopmentPath=${workspaceFolder:vscode-python}",
                "--extensionDevelopmentPath=${workspaceFolder:vscode-jupyter}",
                "--extensionTestsPath=${workspaceFolder:vscode-jupyter}/out/test"
            ],
            "env": {
                "VSC_JUPYTER_CI_TEST_GREP": "", // Modify this to run a subset of the single workspace tests
                "VSC_JUPYTER_CI_TEST_INVERT_GREP": "", // Initialize this to invert the grep (exclude tests with value defined in grep).
                "VSC_PYTHON_LOAD_EXPERIMENTS_FROM_FILE": "true",
                "TEST_FILES_SUFFIX": "ds.test"
            },
            "stopOnEntry": false,
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder:vscode-python}/out/**/*.js",
                "!${workspaceFolder:vscode-python}/**/node_modules**/*",
                "${workspaceFolder:vscode-jupyter}/out/**/*.js",
                "!${workspaceFolder:vscode-jupyter}/**/node_modules**/*"
            ],
            "preLaunchTask": "Compile",
            "skipFiles": [
                "<node_internals>/**"
            ]
        },
        {
            "name": "Unit Tests (without VS Code, *.unit.test.ts)",
            "type": "node",
            "request": "launch",
            "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
            "stopOnEntry": false,
            "sourceMaps": true,
            "args": [
                "./out/test/**/*.unit.test.js",
                "--require=out/test/unittests.js",
                "--ui=tdd",
                "--recursive",
                "--colors",
                //"--grep", "<suite name>",
                "--timeout=300000"
            ],
            "outFiles": [
                "${workspaceFolder}/out/**/*.js",
                "!${workspaceFolder}/**/node_modules**/*"
            ],
            "preLaunchTask": "Compile",
            "skipFiles": [
                "<node_internals>/**"
            ]
        },
        {
            "name": "Unit Tests (fast, without VS Code and without react/monaco, *.unit.test.ts)",
            "type": "node",
            "request": "launch",
            "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
            "stopOnEntry": false,
            "sourceMaps": true,
            "args": [
                "./out/test/**/*.unit.test.js",
                "--require=out/test/unittests.js",
                "--ui=tdd",
                "--recursive",
                "--colors",
                // "--grep", "<suite name>",
                "--timeout=300000",
                "--fast"
            ],
            "outFiles": [
                "${workspaceFolder}/out/**/*.js",
                "!${workspaceFolder}/**/node_modules**/*"
            ],
            "preLaunchTask": "Compile",
            "skipFiles": [
                "<node_internals>/**"
            ]
        },
        {
            "name": "Functional Tests (without VS Code, *.functional.test.ts)",
            "type": "node",
            "request": "launch",
            "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
            "stopOnEntry": false,
            "sourceMaps": true,
            "args": [
                "./out/test/**/*.functional.test.js",
                "--require=out/test/unittests.js",
                "--ui=tdd",
                "--recursive",
                "--colors",
                // "--grep", "<suite name>",
                "--timeout=300000",
                "--exit"
            ],
            "env": {
                // Remove `X` prefix to test with real browser to host DS ui (for DS functional tests).
                "XVSC_PYTHON_DS_UI_BROWSER": "1",
                // Remove `X` prefix to test with real python (for DS functional tests).
                "XVSCODE_PYTHON_ROLLING": "1",
                // Remove 'X' to turn on all logging in the debug output
                "XVSC_PYTHON_FORCE_LOGGING": "1",
                // Remove `X` prefix and update path to test with real python interpreter (for DS functional tests).
                "XCI_PYTHON_PATH": "<Python Path>",
                // Remove 'X' and initialize with second Python interpreter to be used for fucntional tests.
                // Some tests require multiple python interpreters (do not rely on discovery for functional tests, be explicit).
                "XCI_PYTHON_PATH2": "<Python Path>",
                // Remove 'X' prefix to dump output for debugger. Directory has to exist prior to launch
                "XDEBUGPY_LOG_DIR": "${workspaceRoot}/tmp/Debug_Output"
            },
            "outFiles": [
                "${workspaceFolder}/out/**/*.js",
                "!${workspaceFolder}/**/node_modules**/*"
            ],
            // "preLaunchTask": "Compile",
            "skipFiles": [
                "<node_internals>/**"
            ]
        },
        {
            "name": "Functional DS UI Tests (without VS Code, *.ui.functional.test.ts)",
            "type": "node",
            "request": "launch",
            "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
            "stopOnEntry": false,
            "sourceMaps": true,
            "args": [
                "./out/test/**/*.ui.functional.test.js",
                "--require=out/test/unittests.js",
                "--ui=tdd",
                "--recursive",
                "--colors",
                //"--grep", "<suite>",
                "--timeout=300000",
                "--fast"
            ],
            "env": {
                // Remove `X` prefix to test with real browser to host DS ui (for DS functional tests).
                "XVSC_PYTHON_DS_UI_BROWSER": "1",
                // Remove `X` prefix to test with real python (for DS functional tests).
                "XVSCODE_PYTHON_ROLLING": "1",
                // Remove 'X' to turn on all logging in the debug output
                "XVSC_PYTHON_FORCE_LOGGING": "1",
                // Remove `X` prefix and update path to test with real python interpreter (for DS functional tests).
                "XCI_PYTHON_PATH": "<Python Path>"
            },
            "outFiles": [
                "${workspaceFolder}/out/**/*.js",
                "!${workspaceFolder}/**/node_modules**/*"
            ],
            "preLaunchTask": "Compile",
            "skipFiles": [
                "<node_internals>/**"
            ]
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Gulp tasks (helpful for debugging gulpfile.js)",
            "program": "${workspaceFolder}/node_modules/gulp/bin/gulp.js",
            "args": [
                "watch"
            ],
            "skipFiles": [
                "<node_internals>/**"
            ]
        },
        {
            "name": "Node: Current File",
            "program": "${file}",
            "request": "launch",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "pwa-node"
        },
        {
            "name": "Python: Current File with iPython",
            "type": "python",
            "request": "launch",
            "module": "IPython",
            "console": "integratedTerminal",
            "args": [
                "${file}"
            ] // Additional args should be prefixed with a '--' first.
        },
        {
            "name": "Python: Current File",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal"
        }
    ]
}
