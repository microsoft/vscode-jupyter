{
    "capabilities.untrustedWorkspace.description": "Execution of cells in Interactive Window and Notebooks is not supported in untrusted workspaces.",
    "contributes.walkthroughs.jupyterWelcome.title": "Get Started with Jupyter Notebooks",
    "contributes.walkthroughs.jupyterWelcome.description": "Your first steps to set up a Jupyter project with all the powerful tools and features that the Jupyter Extension has to offer!",
    "contributes.walkthroughs.jupyterWelcome.steps.ipynb.newUntitledIpynb.title": "Create or open a Jupyter Notebook",
    "contributes.walkthroughs.jupyterWelcome.steps.ipynb.newUntitledIpynb.description": {
        "message": "Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Create: New Jupyter Notebook``.\n[Create New Jupyter Notebook](command:toSide:ipynb.newUntitledIpynb)\n If you have an existing project, you can also [open a folder](command:toSide:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:toSide:git.clone).",
        "comment": [
            "{Locked='command:workbench.action.showCommands'}",
            "{Locked='command:toSide:ipynb.newUntitledIpynb'}",
            "{Locked='command:toSide:workbench.action.files.openFolder'}",
            "{Locked='command:toSide:git.clone'}"
        ]
    },
    "contributes.walkthroughs.jupyterWelcome.steps.ipynb.newUntitledIpynb.media.altText": "Creating a new Jupyter notebook",
    "contributes.walkthroughs.jupyterWelcome.steps.jupyter.selectKernel.title": "Select a Jupyter kernel",
    "contributes.walkthroughs.jupyterWelcome.steps.jupyter.selectKernel.description": {
        "message": "Click Select Kernel at the top right of the notebook and choose the environment in which to run your kernel. Or, with a notebook opened and in focus, open the [Command Palette](command:workbench.action.showCommands) and run the command: \n``Notebook: Select Notebook Kernel``. \n[Open Command Palette to Select a Jupyter Kernel](command:workbench.action.showCommands)",
        "comment": [
            "{Locked='command:workbench.action.showCommands'}"
        ]
    },
    "contributes.walkthroughs.jupyterWelcome.steps.jupyter.selectKernel.media.altText": "Selecting or changing a notebook kernel",
    "contributes.walkthroughs.jupyterWelcome.steps.jupyter.exploreAndDebug.title": "Explore data and debug",
    "contributes.walkthroughs.jupyterWelcome.steps.jupyter.exploreAndDebug.description": "ðŸ“… You can use the [Data Viewer](https://code.visualstudio.com/docs/datascience/data-science-tutorial#_prepare-the-data) to view, sort, and filter the rows of data. After loading your data, click \"Variables\" at the top right of notebook and click the Data Viewer icon to the left of the data table. \n \n[Learn about Data Viewer](https://code.visualstudio.com/docs/datascience/data-science-tutorial#_prepare-the-data)\n \nðŸ“’ Debug your notebook using the [Run by Line](https://code.visualstudio.com/docs/datascience/jupyter-notebooks#_run-by-line) mode to execute a cell one line at a time. Click the Run by Line icon from your cell (play button with lines) or hit F10. \n \n[Learn about Run by Line](https://code.visualstudio.com/docs/datascience/jupyter-notebooks#_run-by-line)",
    "contributes.walkthroughs.jupyterWelcome.steps.jupyter.exploreAndDebug.media.altText": "Opening data viewer",
    "contributes.walkthroughs.jupyterWelcome.steps.jupyter.dataScienceLearnMore.title": "Find out more!",
    "contributes.walkthroughs.jupyterWelcome.steps.jupyter.dataScienceLearnMore.description": {
        "message": "ðŸŽ¨ Explore all the features the Jupyter Extension has to offer by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n ðŸ“ˆ Learn more about getting started with data science in [Python](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) by installing the Python Extension ([search Python extension](command:workbench.extensions.search?\"ms-python.python\")). \n ðŸ“ƒ Find out more features in our [Tutorials](https://code.visualstudio.com/docs/datascience/jupyter-notebooks).  \n[Learn more](https://aka.ms/AAdar6q)",
        "comment": [
            "{Locked='command:workbench.action.showCommands'}",
            "{Locked='command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D'}",
            "{Locked='command:workbench.extensions.search?\"ms-python.python\")'}",
            "{Locked='docs/datascience/jupyter-notebooks'}"
        ]
    },
    "contributes.walkthroughs.jupyterWelcome.steps.jupyter.dataScienceLearnMore.media.altText": "Image representing our documentation page and mailing list resources.",
    "jupyter.command.dataScience.clearCache.title": "Clear Cache",
    "jupyter.command.dataScience.clearUserProviderJupyterServerCache.title": "Clear User Jupyter Server Cache",
    "jupyter.command.jupyter.replayPylanceLog.title": "Replay Pylance Log",
    "jupyter.command.jupyter.replayPylanceLogStep.title": "Step Pylance Log",
    "jupyter.command.jupyter.exportAsPythonScript.title": "Export to Python Script",
    "jupyter.command.jupyter.exportToHTML.title": "Export to HTML",
    "jupyter.command.jupyter.exportToPDF.title": "Export to PDF",
    "jupyter.command.jupyter.filterKernels.title": "Filter Kernels",
    "jupyter.command.jupyter.runByLine.title": "Run by Line",
    "jupyter.command.jupyter.debugCell.title": "Debug Cell",
    "jupyter.command.jupyter.runByLineNext.title": "Run Next Line",
    "jupyter.command.jupyter.runByLineStop.title": "Continue Execution",
    "jupyter.command.jupyter.runFileInteractive.title": "Run Current File in Interactive Window",
    "jupyter.command.jupyter.debugFileInteractive.title": "Debug Current File in Interactive Window",
    "jupyter.command.jupyter.runallcells.title": "Run All Cells",
    "jupyter.command.jupyter.notebookeditor.expandallcells.title": {
        "message": "Expand All Notebook Cells",
        "comment": [
            "{Locked='Notebook'}"
        ]
    },
    "jupyter.command.jupyter.notebookeditor.collapseallcells.title": {
        "message": "Collapse All Notebook Cells",
        "comment": [
            "{Locked='Notebook'}"
        ]
    },
    "jupyter.command.jupyter.runallcellsabove.title": "Run Above",
    "jupyter.command.jupyter.runcellandallbelow.title": "Run Below",
    "jupyter.command.jupyter.runallcellsabove.palette.title": "Run Cells Above Current Cell",
    "jupyter.command.jupyter.runcurrentcellandallbelow.palette.title": "Run Current Cell and Below",
    "jupyter.command.jupyter.debugcurrentcell.palette.title": "Debug Current Cell",
    "jupyter.command.jupyter.debugcell.title": "Debug Cell",
    "jupyter.command.jupyter.debugstepover.title": "Step Over",
    "jupyter.command.jupyter.debugcontinue.title": "Continue",
    "jupyter.command.jupyter.debugstop.title": "Stop",
    "jupyter.command.jupyter.runtoline.title": "Run To Line in Interactive Window",
    "jupyter.command.jupyter.runfromline.title": "Run From Line in Interactive Window",
    "jupyter.command.jupyter.runcurrentcell.title": "Run Current Cell",
    "jupyter.command.jupyter.runcurrentcelladvance.title": "Run Current Cell And Advance",
    "jupyter.command.jupyter.execSelectionInteractive.title": "Run Selection/Line in Interactive Window",
    "jupyter.command.jupyter.runcell.title": "Run Cell",
    "jupyter.command.jupyter.insertCellBelowPosition.title": "Insert Cell Below Position",
    "jupyter.command.jupyter.insertCellBelow.title": "Insert Cell Below",
    "jupyter.command.jupyter.insertCellAbove.title": "Insert Cell Above",
    "jupyter.command.jupyter.deleteCells.title": "Delete Selected Cells",
    "jupyter.command.jupyter.selectCell.title": "Select Cell",
    "jupyter.command.jupyter.selectCellContents.title": "Select Cell Contents",
    "jupyter.command.jupyter.extendSelectionByCellAbove.title": "Extend Selection By Cell Above",
    "jupyter.command.jupyter.extendSelectionByCellBelow.title": "Extend Selection By Cell Below",
    "jupyter.command.jupyter.moveCellsUp.title": "Move Selected Cells Up",
    "jupyter.command.jupyter.moveCellsDown.title": "Move Selected Cells Down",
    "jupyter.command.jupyter.changeCellToMarkdown.title": "Change Cell to Markdown",
    "jupyter.command.jupyter.changeCellToCode.title": "Change Cell to Code",
    "jupyter.command.jupyter.gotoNextCellInFile.title": "Go to Next Cell",
    "jupyter.command.jupyter.gotoPrevCellInFile.title": "Go to Previous Cell",
    "jupyter.command.jupyter.createnewinteractive.title": "Create Interactive Window",
    "jupyter.command.jupyter.importnotebook.title": {
        "message": "Import Jupyter Notebook",
        "comment": [
            "{Locked='Notebook'}"
        ]
    },
    "jupyter.command.jupyter.importnotebookfile.title": "Import Notebook to Script",
    "jupyter.command.jupyter.exportoutputasnotebook.title": {
        "message": "Export Interactive Window as Jupyter Notebook",
        "comment": [
            "{Locked='Notebook'}"
        ]
    },
    "jupyter.command.jupyter.exportfileasnotebook.title": {
        "message": "Export Current Python File as Jupyter Notebook",
        "comment": [
            "{Locked='Notebook'}"
        ]
    },
    "jupyter.command.jupyter.exportfileandoutputasnotebook.title": {
        "message": "Export Current Python File and Output as Jupyter Notebook",
        "comment": [
            "{Locked='Notebook'}"
        ]
    },
    "jupyter.command.jupyter.undocells.title": "Undo Last Interactive Action",
    "jupyter.command.jupyter.redocells.title": "Redo Last Interactive Action",
    "jupyter.command.jupyter.notebookeditor.removeallcells.title": {
        "message": "Delete All Notebook Editor Cells",
        "comment": [
            "{Locked='Notebook'}"
        ]
    },
    "jupyter.command.jupyter.notebookeditor.addcellbelow.title": {
        "message": "Add Empty Cell to Notebook File",
        "comment": [
            "{Locked='Notebook'}"
        ]
    },
    "jupyter.command.jupyter.interruptkernel.title": "Interrupt Kernel",
    "jupyter.command.jupyter.interruptkernel.shorttitle": "Interrupt",
    "jupyter.command.jupyter.restartkernel.title": "Restart Kernel",
    "jupyter.command.jupyter.restartkernel.shorttitle": "Restart",
    "jupyter.command.jupyter.restartkernelandrunallcells.title": "Restart Kernel and Run All Cells",
    "jupyter.command.jupyter.restartkernelandrunallcells.shorttitle": "Restart and Run All",
    "jupyter.command.jupyter.restartkernelandrunuptoselectedcell.title": "Restart Kernel and Run Up To Selected Cell",
    "jupyter.command.jupyter.expandallcells.title": "Expand All Interactive Cells",
    "jupyter.command.jupyter.collapseallcells.title": "Collapse All Interactive Cells",
    "jupyter.command.jupyter.expandallcells.shorttitle": "Expand",
    "jupyter.command.jupyter.collapseallcells.shorttitle": "Collapse",
    "jupyter.command.jupyter.addcellbelow.title": "Add Empty Cell to File",
    "jupyter.command.jupyter.createnewnotebook.title": "Create New Jupyter Notebook",
    "jupyter.command.jupyter.scrolltocell.title": "Scroll Cell Into View",
    "jupyter.command.jupyter.selectJupyterInterpreter.title": "Select Interpreter to Start Jupyter Server",
    "jupyter.command.jupyter.enableDebugLogging.title": "Enable Debug Logging",
    "jupyter.command.jupyter.resetLoggingLevel.title": "Reset Logging Level",
    "jupyter.command.jupyter.showDataViewer.title": "View Value in Data Viewer",
    "jupyter.command.jupyter.viewOutput.title": "Show Output",
    "jupyter.command.jupyter.clearSavedJupyterUris.title": "Clear Jupyter Remote Server List",
    "jupyter.command.jupyter.openVariableView.title": "Open Variables View",
    "jupyter.command.jupyter.openVariableView.shorttitle": "Variables",
    "jupyter.command.jupyter.openOutlineView.title": "Show Table Of Contents (Outline View)",
    "jupyter.command.jupyter.openOutlineView.shorttitle": "Outline",
    "jupyter.commandPalette.jupyter.replayPylanceLog.title": "Replay Pylance Log",
    "jupyter.notebookRenderer.IPyWidget.displayName": "Jupyter IPyWidget Renderer",
    "jupyter.notebookRenderer.Error.displayName": "Jupyter Error Renderer",
    "jupyter.debuggers.kernel": "Python Kernel Debug Adapter",
    "jupyter.debuggers.interactive": "Python Interactive Window",
    "jupyter.configuration.jupyter.experiments.enabled.description": "Enables/disables A/B tests.",
    "jupyter.configuration.jupyter.showVariableViewWhenDebugging.description": "Bring up the Variable View when starting a Run by Line session.",
    "jupyter.configuration.jupyter.logging.level.description": "The logging level the extension logs at.",
    "jupyter.configuration.jupyter.experiments.optInto.markdownDescription": "List of experiment to opt into. If empty, user is assigned the default experiment groups. [Learn more](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).",
    "jupyter.configuration.jupyter.experiments.optOutFrom.markdownDescription": "List of experiment to opt out of. If empty, user is assigned the default experiment groups. [Learn more](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).",
    "jupyter.configuration.jupyter.widgetScriptSources.items.enumDescriptions.0": "Loads widget (javascript) scripts from https://www.jsdelivr.com/",
    "jupyter.configuration.jupyter.widgetScriptSources.items.enumDescriptions.1": "Loads widget (javascript) scripts from https://unpkg.com/",
    "jupyter.configuration.jupyter.widgetScriptSources.markdownDescription": "Defines the location and order of the sources where scripts files for Widgets are downloaded from (e.g. ipywidgest, bqplot, beakerx, ipyleaflet, etc). Not selecting any of these could result in widgets not rendering or function correctly. See [here](https://aka.ms/PVSCIPyWidgets) for more information. Once updated you will need to restart the Kernel.",
    "jupyter.configuration.jupyter.askForLargeDataFrames.description": "Warn the user before trying to open really large data frames.",
    "jupyter.configuration.jupyter.askForKernelRestart.description": "Warn the user before restarting a kernel.",
    "jupyter.configuration.jupyter.exportWithOutputEnabled.description": "Enable exporting a python file into a jupyter notebook and run all cells when doing so.",
    "jupyter.configuration.jupyter.jupyterLaunchTimeout.description": "Amount of time (in ms) to wait for the Jupyter Notebook server to start.",
    "jupyter.configuration.jupyter.jupyterLaunchRetries.description": "Number of times to attempt to connect to the Jupyter Notebook",
    "jupyter.configuration.jupyter.jupyterCommandLineArguments.description": "If and when a Jupyter server is started, these arguments will be passed to into the Jupyter Notebook CLI. By default this list is generated by the Jupyter Extension.",
    "jupyter.configuration.jupyter.notebookFileRoot.description": "Set the root directory for Jupyter Notebooks and the Interactive Window running locally.  \n\n**Note:** This does not apply to Remote Jupyter Kernels.",
    "jupyter.configuration.jupyter.searchForJupyter.deprecationMessage": "This setting is deprecated and will be removed in a future release.",
    "jupyter.configuration.jupyter.searchForJupyter.description": "Search all installed Python interpreters for a Jupyter installation when starting the Interactive window",
    "jupyter.configuration.jupyter.useDefaultConfigForJupyter.description": "When running Jupyter locally, create a default empty Jupyter config",
    "jupyter.configuration.jupyter.jupyterInterruptTimeout.description": "Amount of time (in ms) to wait for an interrupt before asking to restart the Jupyter kernel.",
    "jupyter.configuration.jupyter.sendSelectionToInteractiveWindow.description": "When pressing shift+enter, send selected code in a Python file to the Jupyter interactive window as opposed to the Python terminal.",
    "jupyter.configuration.jupyter.sendSelectionToInteractiveWindow.deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.textEditor.executeSelection.",
    "jupyter.configuration.jupyter.variableExplorerExclude.description": "Types to exclude from showing in the Interactive variable explorer",
    "jupyter.configuration.jupyter.codeRegularExpression.description": "Regular expression used to identify code cells. All code until the next match is considered part of this cell.",
    "jupyter.configuration.jupyter.codeRegularExpression.deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.cellMarker.codeRegex.",
    "jupyter.configuration.jupyter.defaultCellMarker.description": "Cell marker used for delineating a cell in a python file.",
    "jupyter.configuration.jupyter.defaultCellMarker.deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.cellMarker.default",
    "jupyter.configuration.jupyter.markdownRegularExpression.description": "Regular expression used to identify markdown cells. All comments after this expression are considered part of the markdown.",
    "jupyter.configuration.jupyter.markdownRegularExpression.deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.cellMarker.markdownRegex.",
    "jupyter.configuration.jupyter.ignoreVscodeTheme.deprecationMessage": "This setting is deprecated and will be removed in the next release.",
    "jupyter.configuration.jupyter.ignoreVscodeTheme.description": "Don't use the VS Code theme in the Interactive window (requires reload of VS Code). This forces the Interactive window to use 'Light +(default light)' and disables matplotlib defaults.",
    "jupyter.configuration.jupyter.themeMatplotlibPlots.description": "In the Interactive window and Notebook Editor theme matplotlib outputs to match the VS Code editor theme.",
    "jupyter.configuration.jupyter.decorateCells.description": "Draw a highlight behind the currently active cell, or all cells, in a python file.",
    "jupyter.configuration.jupyter.decorateCells.deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.cellMarker.decorateCells.",
    "jupyter.configuration.jupyter.enableCellCodeLens.description": "Enables code lens for 'cells' in a python file.",
    "jupyter.configuration.jupyter.enableCellCodeLens.deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.codeLens.enable.",
    "jupyter.configuration.jupyter.enableAutoMoveToNextCell.description": "Enables moving to the next cell when clicking on a 'Run Cell' code lens.",
    "jupyter.configuration.jupyter.enableAutoMoveToNextCell.deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.textEditor.autoMoveToNextCell.",
    "jupyter.configuration.jupyter.allowUnauthorizedRemoteConnection.description": "Allow for connecting the Interactive window to a https Jupyter server that does not have valid certificates. This can be a security risk, so only use for known and trusted servers.",
    "jupyter.configuration.jupyter.generateSVGPlots.description": "Generate SVG output for notebook plots. This allows for better display in the plot viewer at the cost of generation speed and file size.",
    "jupyter.configuration.jupyter.generateSVGPlots.deprecationMessage": "This setting is deprecated and will be removed in the next release.",
    "jupyter.configuration.jupyter.codeLenses.description": "Set of commands to put as code lens above a cell.",
    "jupyter.configuration.jupyter.codeLenses.deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.codeLens.commands.",
    "jupyter.configuration.jupyter.debugCodeLenses.description": "Set of debug commands to put as code lens above a cell while debugging.",
    "jupyter.configuration.jupyter.debugCodeLenses.deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.codeLes.debugCommands.",
    "jupyter.configuration.jupyter.debugpyDistPath.description": "Path to debugpy bits for debugging cells.",
    "jupyter.configuration.jupyter.stopOnFirstLineWhileDebugging.description": "When debugging a cell, stop on the first line.",
    "jupyter.configuration.jupyter.remoteDebuggerPort.description": "When debugging a cell, open this port on the remote box. If -1 is specified, a random port between 8889 and 9000 will be attempted.",
    "jupyter.configuration.jupyter.remoteDebuggerPort.deprecationMessage": "This setting is deprecated and will be removed in the next release.",
    "jupyter.configuration.jupyter.disableJupyterAutoStart.description": "When true, disables Jupyter from being automatically started for you. You must instead run a cell to start Jupyter.",
    "jupyter.configuration.jupyter.addGotoCodeLenses.description": {
        "message": "After running a cell, add a 'Goto' code lens on the cell. Note, disabling all code lenses disables this code lens as well.",
        "comment": [
            "{Locked='Goto'}"
        ]
    },
    "jupyter.configuration.jupyter.addGotoCodeLenses.deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.codeLens.enableGotoCell.",
    "jupyter.configuration.jupyter.variableQueries.markdownDescription": {
        "message": "Language to query mapping for returning the list of active variables in a Jupyter kernel. Used by the Variable Explorer in both the Interactive Window and Notebooks. Example:\n```\n[\n  {\n    \"language\": \"python\",\n    \"query\": \"%who_ls\",\n    \"parseExpr\": \"'(\\\\w+)'\"\n  }\n]\n```",
        "comment": [
            "{Locked='language\": \"python\",\n    \"query\": \"%who_ls\",\n    \"parseExpr'}"
        ]
    },
    "jupyter.configuration.jupyter.variableQueries.deprecationMessage": "This setting is deprecated and will be removed in the next release.",
    "jupyter.configuration.jupyter.kernels.filter.markdownDescription": "List of Python environments to be excluded from the Kernel picker.",
    "jupyter.configuration.jupyter.interactiveWindowMode.description": {
        "message": "Behavior of the Interactive Window. 'perFile' will create a new interactive window for every file that runs a cell. 'single' allows a single window. 'multiple' allows the creation of multiple.",
        "comment": [
            "{Locked='perFile'}",
            "{Locked=\"'single'\"}",
            "{Locked=\"'multiple'\"}"
        ]
    },
    "jupyter.configuration.jupyter.interactiveWindowMode.deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.creationMode.",
    "jupyter.configuration.jupyter.pythonCellFolding.description": "Enable folding regions for code cells in Python files. This setting requires a reload of VS Code.",
    "jupyter.configuration.jupyter.pythonCellFolding.deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.textEditor.cellFolding.",
    "jupyter.configuration.jupyter.interactiveWindowViewColumn.description": {
        "message": "Where to open an Interactive Window that is not associated with a python file. 'beside' will open the interactive window to the right of the active editor. 'active' will open the interactive window in place of the active editor. 'secondGroup' will open the interactive window in the second editor group.",
        "comment": [
            "{Locked='beside'}",
            "{Locked=\"'active'\"}",
            "{Locked=\"'secondGroup'\"}"
        ]
    },
    "jupyter.configuration.jupyter.interactiveWindowViewColumn.deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.viewColumn.",
    "jupyter.configuration.jupyter.magicCommandsAsComments.description": "Uncomment shell assignments (#!), line magic (#!%) and cell magic (#!%%) when parsing code cells.",
    "jupyter.configuration.jupyter.magicCommandsAsComments.deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.textEditor.magicCommandsAsComments.",
    "jupyter.configuration.jupyter.pythonExportMethod.description": {
        "message": "The method to use when exporting a notebook to a Python file. 'direct' will copy over the code directly as is. 'commentMagics' will comment out lines starting with line magics (%), cell magics (%%), and shell commands(!). 'nbconvert' will install nbconvert and use that for the conversion which can translate iPython syntax into Python syntax.",
        "comment": [
            "{Locked=\"'direct'\"}",
            "{Locked=\"'commentMagics'\"}",
            "{Locked=\"'nbconvert'\"}"
        ]
    },
    "jupyter.configuration.jupyter.runStartupCommands.description": {
        "message": "A series of Python instructions or iPython magic commands. Can be either an array of strings or a single string with commands separated by '\\n'. Commands will be silently executed whenever the interactive window loads. For instance, set this to '%load_ext autoreload\\n%autoreload 2' to automatically reload changes made to imported files without having to restart the interactive session.",
        "comment": [
            "{Locked='%load_ext autoreload\\n%autoreload 2'}"
        ]
    },
    "jupyter.configuration.jupyter.debugJustMyCode.description": "When debugging, only step through user-written code. Disable this to allow stepping into library code.",
    "jupyter.configuration.jupyter.showOutlineButtonInNotebookToolbar.description": "Show the Outline button in the Jupyter notebook toolbar.",
    "jupyter.configuration.jupyter.newCellOnRunLast.description": "Append a new empty cell to an interactive window file on running the currently last cell.",
    "jupyter.configuration.jupyter.newCellOnRunLast.deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.textEditor.autoAddNewCell.",
    "jupyter.configuration.jupyter.pythonCompletionTriggerCharacters.description": "Characters which trigger auto completion on a python jupyter kernel.",
    "jupyter.configuration.jupyter.logKernelOutputSeparately.description": "Creates separate output panels for kernels/jupyter server console output",
    "jupyter.configuration.jupyter.excludeUserSitePackages.description": {
        "message": "Add PYTHONNOUSERSITE to kernels before starting. This prevents global/user site-packages from being used in the PYTHONPATH of the kernel.",
        "comment": [
            "{Locked='PYTHONNOUSERSITE'}",
            "{Locked='PYTHONPATH'}"
        ]
    },
    "jupyter.configuration.jupyter.enableExtendedKernelCompletions.markdownDescription": "Enables Jedi support for extended IntelliSense completions in running Jupyter kernels (see this [setting](https://ipython.readthedocs.io/en/stable/config/options/terminal.html?highlight=use_jedi#configtrait-Completer.use_jedi)). This can greatly impact notebook cell execution performance. Use with caution.",
    "DataScience.exportDialogTitle": {
        "message": "Export to Jupyter Notebook",
        "comment": [
            "{Locked='Notebook'}"
        ]
    },
    "DataScience.notebookExport": "Export",
    "DataScience.exportAsNotebook.shorttitle": "Save",
    "DataScience.notebookExportAs": "Export As",
    "DataScience.notebookExportAs.shorttitle": "Export",
    "DataScience.interactiveCopyCell": "Copy Cell",
    "DataScience.runInDedicatedExtensionHost": "Run in Dedicated Extension Host",
    "jupyter.configuration.jupyter.kernels.trusted.markdownDescription": "Enter fully qualified paths to Kernel specification files that are to be trusted. E.g. 'C:\\Program Data\\Jupyter\\kernels\\python3\\kernel.json'.  \n**Note**: Kernels can execute code with user privileges. Click [here](https://aka.ms/JupyterTrustedKernelPaths) for further details.",
    "DataScience.latestExtension": "Download the latest version of the Jupyter Extension",
    "DataScience.refreshDataViewerCommandPalette": "Refresh Data Viewer",
    "DataScience.interactiveClearAllCells": "Clear All",
    "DataScience.interactiveGoToCode": "Go to code",
    "DataScience.installPythonTitle": "Install Python",
    "DataScience.installPythonExtensionViaKernelPickerTitle": "Install Python Extension",
    "DataScience.switchToRemoteKernelsTitle": "Connect to a Jupyter Server"
}
